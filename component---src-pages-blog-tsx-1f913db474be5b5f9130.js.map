{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/shared/Tabs/styled.ts","webpack:///./src/components/shared/Tabs/index.tsx","webpack:///./src/components/shared/Tabs/Tab.tsx","webpack:///./src/components/shared/ReactMarkdown/parseHTML/Tabs.tsx","webpack:///./src/components/shared/ReactMarkdown/parseHTML/index.tsx","webpack:///./src/components/shared/NotePanel/styled.ts","webpack:///./src/components/shared/NotePanel/index.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Blockquote.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Break.tsx","webpack:///./src/components/shared/Tooltip/styled.ts","webpack:///./src/components/shared/Tooltip/index.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Code/CopyButton.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Code/theme.ts","webpack:///./src/components/shared/ReactMarkdown/components/Code/index.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Definition.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Delete.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Emphasis.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Heading.tsx","webpack:///./src/components/shared/ReactMarkdown/components/HTML.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Image.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ImageReference.tsx","webpack:///./src/components/shared/ReactMarkdown/components/EmbedVideo/helpers.ts","webpack:///./src/components/shared/ReactMarkdown/components/EmbedVideo/index.ts","webpack:///./src/components/shared/ReactMarkdown/components/InlineCode.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Link.tsx","webpack:///./src/components/shared/ReactMarkdown/components/LinkReference.tsx","webpack:///./src/components/shared/ReactMarkdown/components/List.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ListItem.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Paragraph.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ParsedHTML.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Root.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Strong.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Table.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableBody.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableCell.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableHead.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableRow.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Text.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ThematicBreak.tsx","webpack:///./src/components/shared/ReactMarkdown/components/VirtualHTML.tsx","webpack:///./src/components/shared/ReactMarkdown/helpers.ts","webpack:///./src/components/shared/ReactMarkdown/index.tsx","webpack:///./src/components/blog/styled.ts","webpack:///./src/components/blog/PostHeader.tsx","webpack:///./src/components/blog/content/templates/Default.tsx","webpack:///./src/components/blog/content/styled.ts","webpack:///./src/components/blog/content/templates/Release.tsx","webpack:///./src/components/blog/content/PostContent.tsx","webpack:///./src/components/blog/types.ts","webpack:///./src/components/blog/PostFooter.tsx","webpack:///./src/components/blog/Post.tsx","webpack:///./src/components/blog/BlogPage.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_blog_BlogPage__WEBPACK_IMPORTED_MODULE_2__","RoadmapIndex","_ref","_ref$data$allMarkdown","data","allMarkdownRemark","edges","locale","pageContext","nodes","filter","edge","node","fields","date","a","createElement","pageTitle","TabsWrapper","styled","div","withConfig","displayName","componentId","TabsHeader","ul","customScrollBar","TabsContent","TabWrapper","li","TabLink","props","active","Tabs","className","_ref2","ch","_ref$active","children","_useState","useState","activeTab","setActiveTab","handleTabClick","index","content","concat","apply","child","react_default","React","Children","map","c","cloneElement","key","label","parentCallback","tabIndex","isActive","renderActiveTab","Tab","_ref$label","_ref$isActive","onClick","event","preventDefault","tabsCounter","blockquoteRegex","orderedListRegex","tabs","replaceChildren","shouldProcessNode","type","name","attribs","hasOwnProperty","processNode","childDetails","length","next","summary","tabData","replace","blockquote","listElement","Tabs_Tab","toLowerCase","shared_ReactMarkdown","source","shared_Tabs","htmlParser","isValidNode","processingInstructions","NotePanelWrapper","css","theme","colors","background","third","border","tertiary","quaternary","getColorFromType","NotePanelContent","NotePanel","BlockQuote","getPanelType","value","Fragment","shared_NotePanel","Break","TooltipContainer","timeout","show","fontSize","xs","placement","visible","TooltipWrapper","Tooltip","_ref$showFullTime","showFullTime","_ref$timeout","_ref$placement","setShow","_useState2","setVisible","onMouseEnter","onMouseLeave","setTimeout","CopyButtonWrapper","StyledIcon","Icon","injectIntl","code","_ref$className","formatMessage","setPopup","useContext","PopupState","Context","shared_Tooltip","id","lib","text","onCopy","iconName","iconPrefix","plain","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","CodeWrapper","HighlightWrapper","thumbBorderRadius","trackBorderRadius","StyledCopyButton","CopyButton","Code","language","processedCode","es","Object","assign","defaultProps","tokens","getLineProps","getTokenProps","line","i","token","tokenProps","includes","Definition","Delete","Emphasis","Heading","level","_ref$headingPrefix","headingPrefix","newLevel","headingTokenized","tokenize","shared_Link","Hash","to","chainIcon","H","as","data-scrollspy-node-type","HTML","StyledImage","img","Image","alt","src","_ref$assetsPath","assetsPath","renderedFileName","assetName","path","match","exec","splitedName","split","getAssetName","ImageReference","embedVideoHTML","options","videoId","_iterator","videoIdProcessors","_isArray","Array","isArray","_i","Symbol","iterator","done","processor","e","keys","TypeError","service","readVideoId","videoService","getVideoService","url","iframeNode","width","height","noIframeBorder","additionalHTML","createIframe","videoUrl","embedUrl","URL","urlProcessing","toString","createUrl","message","EmbedVideo","videoOptions","defaultOptions","Math","round","ratio","overrideDefaultOptions","related","keywords","knownPlatforms","join","re","RegExp","processValue","video","trim","StyledInlineCode","InlineCode","inline","embedVideo","dangerouslySetInnerHTML","__html","Link","href","startsWith","External","externalIcon","underline","Internal","LinkReference","StyledOl","ol","StyledUl","List","start","ordered","tight","depth","ListItem","Paragraph","shared_Paragraph","ParsedHTML","element","StyledRoot","Root","StyledStrong","strong","bold","Strong","StyledTable","table","Table","columnAlignment","StyledTableBody","tbody","TableBody","StyledTableHeaderCell","align","StyledTableCell","TableCell","_ref$isHeader","isHeader","_ref$align","StyledTableHead","thead","TableHead","StyledTableRow","tr","TableRow","Text","ThematicBreak","VirtualHTML","tabsBlockRegex","blankLinesRegex","codeBlocksRegex","removeBlankLinesFromTabsBlock","occurrence","ReactMarkdown","_ref$escapeHtml","escapeHtml","_ref$renderedFileName","processedSource","replaceAllLessThanChars","renderers","root","Components","break","paragraph","emphasis","thematicBreak","delete","link","Link_Link","image","Image_Image","linkReference","imageReference","tableHead","tableBody","tableRow","tableCell","list","listItem","definition","heading","Heading_Heading","inlineCode","html","virtualHtml","parsedHtml","react_markdown_default","astPlugins","parseHtml","BlogPageWrapper","media","phone","_templateObject","PostWrapper","article","tablet","_templateObject2","PostHeaderWrapper","header","PostMetadata","p","PostContentWrapper","main","PostFooterWrapper","footer","PostTagsWrapper","PostTag","h4","gt","getTranslation","title","author","_ref$postInfo","postInfo","year","month","day","metadata","i18n","values","DefaultTemplatePost","markdown","ReleaseButtonsWrapper","ReleaseTemplatePost","releaseTag","config","links","KYMA_REPOSITORY_LINK","Button","Normal","version","PostContent","Release","Default","PostFooter","_ref$tags","tags","tag","Post","_ref$metadata","_ref$metadata$tags","_ref$fields","slug","_ref$readMore","previous","readMore","blog_PostHeader","content_PostContent","Emphasized","size","blog_PostFooter","_styled_Grid__WEBPACK_IMPORTED_MODULE_1__","_components_blog_Post__WEBPACK_IMPORTED_MODULE_2__","_styled__WEBPACK_IMPORTED_MODULE_3__","Container","Row","Unit","df","md","BlogPage","post","frontmatter","excerpt","rawMarkdownBody"],"mappings":"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","file":"component---src-pages-blog-tsx-1f913db474be5b5f9130.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { AllMarkdownRemark, PageContext, IntlPageContext } from \"@common/types\";\nimport { Post, PostPageContext } from \"@components/blog/types\";\n\nimport Layout from \"@components/layout/Layout\";\nimport BlogPage from \"@components/blog/BlogPage\";\n\nconst RoadmapIndex: React.FunctionComponent<\n  AllMarkdownRemark<Post> & PageContext<IntlPageContext>\n> = ({\n  data: {\n    allMarkdownRemark: { edges = [] },\n  },\n  pageContext: { locale },\n}) => {\n  const nodes = edges.filter(edge => !!edge.node.fields.date);\n\n  return (\n    <Layout locale={locale} pageTitle=\"Blog\">\n      <BlogPage nodes={nodes} />\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n    ) {\n      edges {\n        node {\n          ...BlogPost\n        }\n      }\n    }\n  }\n`;\n\nexport default RoadmapIndex;\n","import styled from \"@styled\";\nimport { customScrollBar } from \"@styled/mixins\";\n\nexport const TabsWrapper = styled.div`\n  &&& {\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    margin: 16px 0;\n    border: 1px solid rgb(229, 229, 229);\n    background: #fff;\n    border-radius: 4px;\n  }\n`;\n\nexport const TabsHeader = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  border-bottom: 1px solid rgb(229, 229, 229);\n  flex-flow: row nowrap;\n  white-space: nowrap;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n\n  ${customScrollBar({})}\n`;\n\nexport const TabsContent = styled.div`\n  && {\n    margin: 16px;\n    margin-bottom: 16px !important;\n  }\n`;\n\nexport const TabWrapper = styled.li`\n  margin-bottom: 0;\n`;\n\ninterface TabLinkProps {\n  active?: boolean;\n}\n\nexport const TabLink = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 16px;\n  padding: 16px 0 10px 0;\n  border: none;\n  position: relative;\n  color: ${(props: TabLinkProps) => (props.active ? \"#0B74DE\" : \"#485766\")};\n  outline: none;\n  transition: 0.2s all ease-in-out;\n  cursor: pointer;\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  &:after {\n    content: \"\";\n    bottom: 0;\n    display: block;\n    position: absolute;\n    height: ${props => (props.active ? \"3px\" : \"0px\")};\n    width: 100%;\n    background-color: #0b74de;\n  }\n  &:hover {\n    color: #0b74de;\n    &:after {\n      content: \"\";\n      bottom: 0;\n      display: block;\n      position: absolute;\n      height: 3px;\n      width: 100%;\n      background-color: #0b74de;\n    }\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport { TabProps } from \"./Tab\";\n\nimport { TabsWrapper, TabsHeader, TabsContent } from \"./styled\";\n\ninterface TabsProps {\n  className?: string;\n  active?: number;\n}\n\nconst Tabs: React.FunctionComponent<TabsProps> = ({\n  className = \"\",\n  active = 0,\n  children,\n}) => {\n  const [activeTab, setActiveTab] = useState(active);\n\n  const handleTabClick = (index: number) => {\n    setActiveTab(index);\n  };\n\n  const renderHeader = (ch: Array<React.ReactElement<TabProps>>) =>\n    React.Children.map(ch, (child, index) => {\n      const c = child as React.ReactElement<TabProps>;\n      return React.cloneElement(c, {\n        key: index,\n        label: c.props.label,\n        parentCallback: handleTabClick,\n        tabIndex: index,\n        isActive: index === activeTab,\n      });\n    });\n\n  const renderActiveTab = (ch: Array<React.ReactElement<TabProps>>) =>\n    ch[activeTab] ? ch[activeTab].props.children : null;\n\n  const content = []\n    .concat(...(children as any))\n    .filter(child => child !== null && child !== undefined);\n\n  return (\n    <TabsWrapper>\n      <TabsHeader>{renderHeader(content)}</TabsHeader>\n      <TabsContent>{renderActiveTab(content)}</TabsContent>\n    </TabsWrapper>\n  );\n};\n\nexport default Tabs;\n","import React, { Component } from \"react\";\n\nimport { TabLink, TabWrapper } from \"./styled\";\n\nexport interface TabProps {\n  children: React.ReactNode;\n  label: string;\n  tabIndex?: number;\n  isActive?: boolean;\n  parentCallback?: (value: number) => void;\n}\n\nconst Tab: React.FunctionComponent<TabProps> = ({\n  label = \"\",\n  tabIndex,\n  isActive = false,\n  parentCallback,\n}) => (\n  <TabWrapper key={tabIndex}>\n    <TabLink\n      onClick={(event: any) => {\n        event.preventDefault();\n        parentCallback!(tabIndex!);\n      }}\n      active={isActive}\n    >\n      {label}\n    </TabLink>\n  </TabWrapper>\n);\n\nexport default Tab;\n","import React from \"react\";\n\nimport Tabs from \"@components/shared/Tabs\";\nimport Tab from \"@components/shared/Tabs/Tab\";\nimport ReactMarkdown from \"@components/shared/ReactMarkdown\";\n\nlet tabsCounter = 0;\nconst blockquoteRegex = /(^( *>).*?\\n)/gm;\nconst orderedListRegex = /^( *[0-9])+.(.*)/gm;\n\nexport const tabs = {\n  replaceChildren: true,\n  shouldProcessNode: (node: any) =>\n    node.type === \"tag\" &&\n    node.name === \"div\" &&\n    node.attribs &&\n    node.attribs.hasOwnProperty(\"tabs\"),\n  processNode: (node: any) => {\n    const children = node.children.map((child: any) => {\n      if (child.type === \"tag\" && child.name === \"details\" && child.children) {\n        return child.children.map((childDetails: any) => {\n          if (\n            childDetails.type === \"tag\" &&\n            childDetails.name === \"summary\" &&\n            childDetails.children.length === 1 &&\n            childDetails.children[0].type === \"text\" &&\n            childDetails.next.data\n          ) {\n            const summary = childDetails.children[0].data;\n            const tabData = childDetails.next.data\n              .replace(\n                blockquoteRegex,\n                (blockquote: string) => `${blockquote}\\n`,\n              )\n              .replace(\n                orderedListRegex,\n                (listElement: string) => `\\n${listElement}\\n`,\n              );\n\n            return (\n              <Tab\n                key={summary.toLowerCase().replace(\" \", \"-\")}\n                label={summary}\n              >\n                <ReactMarkdown source={tabData} />\n              </Tab>\n            );\n          }\n        });\n      }\n    });\n\n    return [<Tabs key={tabsCounter++}>{children}</Tabs>];\n  },\n};\n","// @ts-ignore\nimport htmlParser from \"react-markdown/plugins/html-parser\";\n\nimport { tabs } from \"./Tabs\";\n\nconst isValidNode = (node: any) => node.type !== \"script\";\n\nexport default htmlParser({\n  isValidNode,\n  processingInstructions: [\n    // Tabs processing\n    tabs,\n  ],\n});\n","import styled, { css } from \"@styled\";\nimport { NotePanelProps } from \"./index\";\n\nconst getColorFromType = (props: NotePanelProps) => {\n  switch (props.type) {\n    case \"note\":\n      return css`\n        ${data => data.theme.colors.background.third}\n      `;\n    case \"tip\":\n      return css`\n        ${data => data.theme.colors.border.tertiary}\n      `;\n    case \"caution\":\n      return css`\n        ${data => data.theme.colors.border.quaternary}\n      `;\n    default:\n      return \"unset\";\n  }\n};\n\nexport const NotePanelWrapper = styled.blockquote`\n  margin-left: 0;\n  margin-right: 0;\n  padding: 16px;\n  border-left: 3px solid ${(props: NotePanelProps) => getColorFromType(props)};\n`;\n\nexport const NotePanelContent = styled.div`\n  display: inline-block;\n`;\n","import React from \"react\";\n\nimport { NotePanelWrapper, NotePanelContent } from \"./styled\";\n\nexport type NotePanelPropsType = \"note\" | \"tip\" | \"caution\" | undefined;\nexport interface NotePanelProps {\n  type: NotePanelPropsType;\n}\n\nconst NotePanel: React.FunctionComponent<NotePanelProps> = ({\n  type,\n  children,\n}) => (\n  <NotePanelWrapper type={type}>\n    <NotePanelContent>{children}</NotePanelContent>\n  </NotePanelWrapper>\n);\n\nexport default NotePanel;\n","import React from \"react\";\nimport NotePanel, { NotePanelPropsType } from \"@components/shared/NotePanel\";\n\nexport const BlockQuote: React.FunctionComponent = ({ children }) => {\n  const getPanelType = (child: any): NotePanelPropsType => {\n    const type =\n      child &&\n      child.props &&\n      child.props.children &&\n      child.props.children[0] &&\n      child.props.children[0].props.children[0] &&\n      child.props.children[0].props.children[0].props &&\n      child.props.children[0].props.children[0].props.value;\n\n    return type && type.replace(\":\", \"\").toLowerCase();\n  };\n\n  const createPanels = (elem: any) =>\n    elem.map((child: any, index: number) => (\n      <NotePanel type={getPanelType(child)} key={index}>\n        {child}\n      </NotePanel>\n    ));\n\n  return children ? <>{createPanels(children)}</> : null;\n};\n","import React from \"react\";\n\nexport const Break: React.FunctionComponent = ({ children }) => <>{children}</>;\n","import styled from \"@styled\";\n\ninterface TooltipContainerProps {\n  placement?: \"left\" | \"top\" | \"right\" | \"bottom\";\n  timeout?: number;\n  show?: boolean;\n  visible?: boolean;\n}\n\nexport const TooltipContainer = styled.div`\n  transition: all ${props => `${props.timeout}ms`} ease-in-out;\n  visibility: ${(props: TooltipContainerProps) =>\n    props.show ? \"visible\" : \"hidden\"};\n  position: absolute;\n  z-index: 99;\n  padding: 5px 7px;\n  font-size: ${props => props.theme.fontSize.xs};\n  color: #fff;\n  background-color: #0077e1;\n  box-shadow: 0 0 6px 0 rgba(137, 165, 199, 0.42);\n  border-radius: 3px;\n  font-size: 10px;\n  font-family: Poppins;\n  line-height: 10px;\n  min-width: 80px;\n  max-width: 260px;\n  width: auto;\n  text-align: center;\n  ${props => (props.placement === \"top\" ? \"bottom: 100%;\" : \"top: 100%\")};\n  right: 50%;\n  transform: translateX(50%);\n  opacity: ${props => (props.visible ? \"1\" : \"0\")};\n\n  &:after {\n    content: \"\";\n    border: 6px solid;\n    border-color: ${props => {\n      switch (props.placement) {\n        case \"bottom\":\n          return `transparent transparent #0077e1`;\n        default:\n          return `transparent transparent #0077e1`;\n      }\n    }};\n    right: 50%;\n    transform: translateX(6px);\n    margin-left: -10px;\n    position: absolute;\n    ${props =>\n      props.placement === \"top\"\n        ? \"top: 100%; margin-top: -1px;\"\n        : \"bottom: 100%; margin-bottom: -1px;\"};\n  }\n`;\n\nexport const TooltipWrapper = styled.div`\n  font-family: \"72\";\n  position: relative;\n  display: inline-block;\n\n  &:hover ${TooltipContainer} {\n    visibility: visible;\n    opacity: 1;\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport { TooltipWrapper, TooltipContainer } from \"./styled\";\n\ninterface TooltipProps {\n  content: any;\n  showFullTime?: boolean;\n  timeout?: number;\n  placement?: \"left\" | \"top\" | \"right\" | \"bottom\";\n}\n\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({\n  children,\n  content,\n  showFullTime = false,\n  timeout = 200,\n  placement = \"top\",\n}) => {\n  const [show, setShow] = useState(false);\n  const [visible, setVisible] = useState(false);\n\n  const handleShow = () => {\n    setShow(true);\n    setVisible(true);\n  };\n\n  const handleHide = () => {\n    setVisible(false);\n\n    if (!showFullTime) {\n      setTimeout(() => setShow && setShow(false), timeout);\n    }\n  };\n\n  return (\n    <TooltipWrapper onMouseEnter={handleShow} onMouseLeave={handleHide}>\n      {children}\n      <TooltipContainer\n        placement={placement}\n        timeout={timeout}\n        show={show}\n        visible={visible}\n      >\n        {content}\n      </TooltipContainer>\n    </TooltipWrapper>\n  );\n};\n\nexport default Tooltip;\n","import React, { useContext } from \"react\";\nimport styled from \"@styled\";\n\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nimport PopupState from \"@common/state/usePopup\";\nimport { injectIntl, IntlInterface } from \"@common/i18n\";\n\nimport Icon from \"@components/shared/Icon\";\nimport Tooltip from \"@components/shared/Tooltip\";\n\nconst CopyButtonWrapper = styled.div`\n  user-select: none;\n`;\n\nconst StyledIcon = styled(Icon)`\n  cursor: copy;\n  width: 28px;\n  min-width: 28px;\n  height: 28px;\n  min-height: 28px;\n  padding: 6px;\n  border-radius: 100%;\n  box-shadow: 0 0 6px 0 rgba(137, 165, 199, 0.42);\n  background-color: #fff;\n  color: #c9c9c9;\n  transition: color 0.2s ease-in-out;\n\n  &:hover {\n    color: #0073e6;\n  }\n`;\n\ninterface CopyButtonProps {\n  code: string;\n  className?: string;\n}\n\nconst CopyButton: React.FunctionComponent<IntlInterface & CopyButtonProps> = ({\n  code,\n  className = \"\",\n  formatMessage,\n}) => {\n  const { setPopup } = useContext(PopupState.Context);\n\n  return (\n    <CopyButtonWrapper className={className}>\n      <Tooltip\n        content={formatMessage({ id: \"copyButtonTooltip\" })}\n        placement=\"bottom\"\n      >\n        <CopyToClipboard\n          text={code}\n          onCopy={() => {\n            setPopup(formatMessage({ id: \"copyPopup\" }));\n          }}\n        >\n          <span>\n            <StyledIcon iconName=\"copy\" iconPrefix=\"far\" />\n          </span>\n        </CopyToClipboard>\n      </Tooltip>\n    </CopyButtonWrapper>\n  );\n};\n\nexport default injectIntl(\"utils\")(CopyButton);\n","export default {\n  plain: {\n    backgroundColor: \"rgb(250, 250, 250)\",\n    color: \"rgb(80, 161, 79)\",\n  },\n  styles: [\n    {\n      types: [\"string\"],\n      style: {\n        color: \"rgb(80, 161, 79)\",\n      },\n    },\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n      style: {\n        color: \"rgb(160, 161, 167)\",\n      },\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7,\n      },\n    },\n    {\n      types: [\"tag\", \"operator\", \"number\"],\n      style: {\n        color: \"#063289\",\n      },\n    },\n    {\n      types: [\"property\", \"function\"],\n      style: {\n        color: \"#b29762\",\n      },\n    },\n    {\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\n      style: {\n        color: \"#2d2006\",\n      },\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#896724\",\n      },\n    },\n    {\n      types: [\"key\"],\n      style: {\n        color: \"rgb(152, 104, 1)\",\n      },\n    },\n    {\n      types: [\n        \"boolean\",\n        \"entity\",\n        \"url\",\n        \"attr-value\",\n        \"keyword\",\n        \"control\",\n        \"directive\",\n        \"unit\",\n        \"statement\",\n        \"regex\",\n        \"at-rule\",\n      ],\n      style: {\n        color: \"#728fcb\",\n      },\n    },\n    {\n      types: [\"placeholder\", \"variable\"],\n      style: {\n        color: \"#93abdc\",\n      },\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\",\n      },\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\",\n      },\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\",\n      },\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"#896724\",\n      },\n    },\n  ],\n};\n","import React from \"react\";\nimport styled from \"@styled\";\nimport { customScrollBar } from \"@styled/mixins\";\n\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\n\nimport CopyButton from \"./CopyButton\";\nimport theme from \"./theme\";\n\nconst CodeWrapper = styled.div`\n  position: relative;\n  margin: 0 0 16px 0;\n`;\n\nconst HighlightWrapper = styled.div`\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier,\n    monospace !important;\n  background: rgb(250, 250, 250);\n  border: 1px solid rgb(229, 229, 229);\n  border-radius: 5px;\n  padding-bottom: 16px;\n  white-space: nowrap;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n\n  ${customScrollBar({\n    thumbBorderRadius: \"0 0 4px 4px\",\n    trackBorderRadius: \"0 0 4px 4px\",\n  })}\n\n  > pre {\n    padding: 16px 16px 0 16px;\n    margin-bottom: 0 !important;\n\n    > code {\n      word-break: normal;\n      white-space: pre;\n      overflow-wrap: normal;\n\n      > div span:last-child {\n        padding-right: 16px;\n      }\n    }\n  }\n`;\n\nconst StyledCopyButton = styled(CopyButton)`\n  position: absolute;\n  top: -10px;\n  right: -10px;\n`;\n\ninterface CodeProps {\n  language: string;\n  value: string;\n}\n\nexport const Code: React.FunctionComponent<CodeProps> = ({\n  language,\n  value,\n  children,\n}) => {\n  const code = children ? children : value;\n  const processedCode = (code as string)\n    .replace(/&#60;/gm, \"<\")\n    .replace(/^(\\$ *)/gm, \"\");\n\n  return (\n    <CodeWrapper>\n      <StyledCopyButton code={processedCode} />\n      <HighlightWrapper>\n        <Highlight\n          {...defaultProps}\n          code={processedCode}\n          theme={theme}\n          language={language ? language : \"yaml\"}\n        >\n          {({ className, style, tokens, getLineProps, getTokenProps }: any) => (\n            <pre className={className} style={style}>\n              <code>\n                {tokens.map((line: any, i: number) => (\n                  <div {...getLineProps({ line, key: i })}>\n                    {line.map((token: any, key: number) => {\n                      const tokenProps = getTokenProps({ token, key });\n\n                      return !(\n                        tokenProps.className.includes(\"plain\") &&\n                        !tokenProps.children\n                      ) ? (\n                        <span {...getTokenProps({ token, key })} />\n                      ) : null;\n                    })}\n                  </div>\n                ))}\n              </code>\n            </pre>\n          )}\n        </Highlight>\n      </HighlightWrapper>\n    </CodeWrapper>\n  );\n};\n","import React from \"react\";\n\nexport const Definition: React.FunctionComponent = ({ children }) => (\n  <>{children}</>\n);\n","import React from \"react\";\n\nexport const Delete: React.FunctionComponent = ({ children }) => (\n  <>{children}</>\n);\n","import React from \"react\";\n\nexport const Emphasis: React.FunctionComponent = ({ children }) => (\n  <>{children}</>\n);\n","import React from \"react\";\n\nimport H from \"@components/shared/H\";\nimport Link from \"@components/shared/Link\";\n\nimport { tokenize } from \"@common/utils\";\n\ninterface HeadingProps {\n  level: 1 | 2 | 3 | 4 | 5 | 6;\n  headingPrefix?: string;\n}\n\nexport const Heading: React.FunctionComponent<HeadingProps> = ({\n  level,\n  headingPrefix = \"\",\n  children,\n}) => {\n  const newLevel = level + 2 >= 6 ? 6 : level + 2;\n  const headingTokenized = tokenize((children as any[])[0].props\n    .value as string);\n\n  const id = (headingPrefix\n    ? `${headingPrefix}-${headingTokenized}`\n    : headingTokenized\n  ).replace(/[^a-zA-Z0-9]/g, \"-\");\n\n  return (\n    <Link.Hash to={id} chainIcon={true}>\n      <H as={`h${newLevel}`} id={id} data-scrollspy-node-type=\"header\">\n        {children}\n      </H>\n    </Link.Hash>\n  );\n};\n","import React from \"react\";\n\nexport const HTML: React.FunctionComponent = () => null;\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledImage = styled.img`\n  margin: 16px 0;\n  border-radius: 3px;\n`;\n\ninterface ImageProps {\n  alt: string;\n  src: string;\n  assetsPath?: string;\n  renderedFileName?: string;\n}\n\nexport const Image: React.FunctionComponent<ImageProps> = ({\n  alt,\n  src,\n  assetsPath = \"\",\n  renderedFileName = \"\",\n}) => {\n  const getAssetName = (path: string): string => {\n    const fileNameRegex = /(.*?)\\/(.*?).(jpeg|jpg|gif|png|svg)$/;\n    const match = fileNameRegex.exec(path);\n\n    if (match && match[2]) {\n      const splitedName = match[2].split(\"/\");\n      return `${splitedName[splitedName.length - 1]}.${match[3]}`;\n    }\n    return \"\";\n  };\n\n  if (!assetsPath) {\n    return null;\n  }\n\n  const assetName = getAssetName(src);\n  if (!assetName) {\n    return null;\n  }\n\n  return <StyledImage src={`${assetsPath}${assetName}`} alt={alt} />;\n};\n","import React from \"react\";\n\nexport const ImageReference: React.FunctionComponent = () => null;\n","import { Url } from \"url\";\n\nimport {\n  getVideoService,\n  videoIdProcessors,\n} from \"gatsby-remark-embed-video/src/config\";\nimport {\n  IEmbedVideoOptions,\n  IVideoId,\n  IVideoService,\n} from \"gatsby-remark-embed-video/src/interfaces\";\n\nexport function embedVideoHTML(\n  type: string,\n  id: string,\n  options: IEmbedVideoOptions,\n): string {\n  try {\n    const videoId: IVideoId = readVideoId(type, id);\n\n    const videoService = getVideoService(videoId.service);\n    const url = createUrl(videoId.id, videoService, options);\n    const iframe = createIframe(url, videoService, options);\n    return iframe;\n  } catch (e) {\n    return `<p style=\"color: red\">Error: ${e.message}</p>`;\n  }\n}\n\nfunction readVideoId(type: string, id: string): IVideoId {\n  let videoId;\n  for (const processor of videoIdProcessors) {\n    try {\n      videoId = processor(id);\n    } catch (e) {\n      videoId = {};\n    }\n\n    if (Object.keys(videoId).length !== 0) {\n      return videoId as IVideoId;\n    }\n  }\n\n  if (type === \"video\") {\n    throw new TypeError(\"Id could not be processed\");\n  }\n\n  return {\n    id,\n    service: type.toLowerCase(),\n  };\n}\n\nfunction createUrl(\n  videoId: string,\n  videoService: IVideoService,\n  options: IEmbedVideoOptions,\n): string {\n  const videoUrl = videoService.embedUrl(videoId);\n  let url = new URL(videoUrl);\n\n  if (videoService.urlProcessing) {\n    url = videoService.urlProcessing(videoId, url, options);\n  }\n\n  return url.toString();\n}\n\nfunction createIframe(\n  url: string,\n  videoService: IVideoService,\n  options: IEmbedVideoOptions,\n) {\n  let iframeNode = `\n        <div class=\"embedVideo-container\">\n            <iframe \n              width=\"${options.width}\" \n              height=\"${options.height}\" \n              src=\"${url}\"\n              class=\"embedVideo-iframe\" \n              allowfullscreen\n            ></iframe>\n        </div>`;\n  if (options.noIframeBorder) {\n    iframeNode += `\n      <style>\n        .embedVideo-iframe {\n          border: 0\n        }\n      </style>`;\n  }\n\n  if (videoService.additionalHTML) {\n    iframeNode += videoService.additionalHTML;\n  }\n\n  return iframeNode;\n}\n","import { IEmbedVideoOptions } from \"gatsby-remark-embed-video/src/interfaces\";\nimport {\n  defaultOptions,\n  knownPlatforms,\n} from \"gatsby-remark-embed-video/src/config\";\n\nimport { embedVideoHTML } from \"./helpers\";\n\nconst overrideDefaultOptions = (\n  options?: IEmbedVideoOptions,\n): IEmbedVideoOptions => {\n  const videoOptions = options\n    ? { ...defaultOptions, ...options }\n    : { ...defaultOptions };\n\n  if (!videoOptions.height) {\n    videoOptions.height = Math.round(videoOptions.width / videoOptions.ratio);\n  }\n\n  return videoOptions;\n};\n\nexport default (value: string) => {\n  const options = overrideDefaultOptions({\n    width: 850,\n    ratio: 1.77,\n    related: false,\n    noIframeBorder: true,\n  });\n\n  const keywords = [...knownPlatforms(), \"video\"].join(\"|\");\n  const re = new RegExp(`\\(${keywords}\\):\\(\\.\\*\\)`, \"i\");\n\n  const processValue = value.match(re);\n  if (processValue) {\n    const type = processValue[1];\n    const id = processValue[2].trim();\n\n    const video = embedVideoHTML(type, id, options);\n\n    if (video.includes(\"Error\")) {\n      return null;\n    }\n    return video;\n  }\n  return null;\n};\n","import React from \"react\";\nimport styled from \"@styled\";\n\nimport embedVideo from \"./EmbedVideo\";\n\nconst StyledInlineCode = styled.code`\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier,\n    monospace;\n  font-size: 85%;\n  background-color: rgba(27, 31, 35, 0.05);\n  padding: 0.2em 0.4em;\n  margin: 0;\n  border-radius: 3px;\n`;\n\ninterface InlineCodeProps {\n  inline: boolean;\n  value: string;\n}\n\nexport const InlineCode: React.FunctionComponent<InlineCodeProps> = ({\n  inline = true,\n  value,\n  children,\n}) => {\n  let video = null;\n  if (value) {\n    video = embedVideo(value);\n  }\n\n  return video ? (\n    <div dangerouslySetInnerHTML={{ __html: video }} />\n  ) : (\n    <StyledInlineCode>{children === value ? value : children}</StyledInlineCode>\n  );\n};\n","import React from \"react\";\n\nimport L from \"@components/shared/Link\";\n\ninterface LinkProps {\n  href: string;\n  assetsPath?: string;\n}\n\nexport const Link: React.FunctionComponent<LinkProps> = ({\n  href,\n  assetsPath = \"\",\n  children,\n}) => {\n  const getAssetName = (path: string): string => {\n    const fileNameRegex = /(.*?)\\/(.*?).(jpeg|jpg|gif|png|svg|json|yaml|yml)$/;\n    const match = fileNameRegex.exec(path);\n\n    if (match && match[2]) {\n      const splitedName = match[2].split(\"/\");\n      return `${splitedName[splitedName.length - 1]}.${match[3]}`;\n    }\n    return \"\";\n  };\n\n  if (href.startsWith(\"http\")) {\n    return (\n      <L.External to={href} externalIcon={true} underline={true}>\n        {children}\n      </L.External>\n    );\n  }\n  if (href.startsWith(\"#\")) {\n    return (\n      <L.Hash to={href} underline={true}>\n        {children}\n      </L.Hash>\n    );\n  }\n\n  const assetName = getAssetName(href);\n  if (assetName) {\n    return <a href={`${assetsPath}${assetName}`}>{children}</a>;\n  }\n  return (\n    <L.Internal to={href} underline={true}>\n      {children}\n    </L.Internal>\n  );\n};\n","import React from \"react\";\n\nexport const LinkReference: React.FunctionComponent<{}> = () => null;\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledOl = styled.ol`\n  list-style-type: decimal;\n  margin-left: 28px;\n`;\n\nconst StyledUl = styled.ul`\n  list-style-type: disc;\n  margin-left: 20px;\n`;\n\ninterface ListProps {\n  start: number;\n  ordered: boolean;\n  tight: boolean;\n  depth: number;\n}\n\nexport const List: React.FunctionComponent<ListProps> = ({\n  start,\n  ordered,\n  tight,\n  depth,\n  children,\n}) => {\n  if (ordered) {\n    return <StyledOl start={start}>{children}</StyledOl>;\n  }\n  return <StyledUl>{children}</StyledUl>;\n};\n","import React from \"react\";\n\ninterface ListItemProps {\n  checked: boolean | null;\n  index: number;\n}\n\nexport const ListItem: React.FunctionComponent<ListItemProps> = ({\n  index,\n  children,\n}) => <li key={index}>{children}</li>;\n","import React from \"react\";\n\nimport P from \"@components/shared/Paragraph\";\n\nexport const Paragraph: React.FunctionComponent<{}> = ({ children }) => (\n  <P>{children}</P>\n);\n","import React from \"react\";\n\ninterface ParsedHTMLProps {\n  element: any;\n}\n\nexport const ParsedHTML: React.FunctionComponent<ParsedHTMLProps> = ({\n  element,\n}) => <>{element}</>;\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledRoot = styled.div`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial,\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n`;\n\nexport const Root: React.FunctionComponent = ({ children }) => (\n  <StyledRoot>{children}</StyledRoot>\n);\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledStrong = styled.strong`\n  font-weight: ${props => props.theme.fontWeight.bold};\n`;\n\nexport const Strong: React.FunctionComponent<{}> = ({ children }) => (\n  <StyledStrong>{children}</StyledStrong>\n);\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTable = styled.table`\n  display: block;\n  width: 100%;\n  overflow: auto;\n`;\n\ninterface TableProps {\n  columnAlignment: AlignType;\n}\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  columnAlignment,\n  children,\n}) => <StyledTable>{children}</StyledTable>;\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTableBody = styled.tbody``;\n\ninterface TableBodyProps {\n  columnAlignment: AlignType;\n}\n\nexport const TableBody: React.FunctionComponent<TableBodyProps> = ({\n  columnAlignment,\n  children,\n}) => <StyledTableBody>{children}</StyledTableBody>;\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\ninterface TableCellProps {\n  align: AlignType;\n}\n\nconst StyledTableHeaderCell = styled(\"th\")<TableCellProps>`\n  text-align: ${props => props.align};\n  padding: 8px 13px;\n  display: table-cell;\n  vertical-align: middle;\n  border: 1px solid rgb(223, 226, 229);\n\n  &:first-child {\n    padding-left: 13px;\n  }\n\n  &:last-child {\n    padding-right: 13px;\n  }\n`;\n\nconst StyledTableCell = styled(\"td\")<TableCellProps>`\n  text-align: ${props => props.align};\n  padding: 8px 13px;\n  display: table-cell;\n  vertical-align: middle;\n  border: 1px solid rgb(223, 226, 229);\n\n  &:first-child {\n    padding-left: 13px;\n  }\n\n  &:last-child {\n    padding-right: 13px;\n  }\n`;\n\ninterface TableCellProps {\n  isHeader: boolean;\n  align: AlignType;\n}\n\nexport const TableCell: React.FunctionComponent<TableCellProps> = ({\n  isHeader = false,\n  align = \"left\",\n  children,\n}) =>\n  isHeader ? (\n    <StyledTableHeaderCell align={align}>{children}</StyledTableHeaderCell>\n  ) : (\n    <StyledTableCell align={align}>{children}</StyledTableCell>\n  );\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTableHead = styled.thead``;\n\ninterface TableHeadProps {\n  columnAlignment: AlignType;\n}\n\nexport const TableHead: React.FunctionComponent<TableHeadProps> = ({\n  columnAlignment,\n  children,\n}) => <StyledTableHead>{children}</StyledTableHead>;\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTableRow = styled.tr`\n  &:nth-child(2n) {\n    background-color: rgb(246, 248, 250);\n  }\n`;\n\ninterface TableRowProps {\n  isHeader: boolean;\n  columnAlignment: AlignType;\n}\n\nexport const TableRow: React.FunctionComponent<TableRowProps> = ({\n  isHeader = false,\n  columnAlignment,\n  children,\n}) => <StyledTableRow>{children}</StyledTableRow>;\n","import React from \"react\";\n\nexport const Text: React.FunctionComponent<{}> = ({ children }) => (\n  <>{children}</>\n);\n","import React from \"react\";\n\nexport const ThematicBreak: React.FunctionComponent<{\n  children: ReactNode;\n}> = ({ children }) => <>{children}</>;\n","import React from \"react\";\n\nexport const VirtualHTML: React.FunctionComponent<{}> = () => null;\n","const tabsBlockRegex = /<div tabs>(.|\\n)*?<\\/div>/gm;\n// Regex for removing blank lines for correct parsing toggle in ReactMarkdown component\nconst blankLinesRegex = /^\\s*$(?:\\r\\n?|\\n)/gm;\nconst codeBlocksRegex = /^(([ \\t]*`{3,4})([^\\n]*)([\\s\\S]+?)(^[ \\t]*\\2))/gm;\nconst lessThanChar = \"&#60;\";\n\nexport const removeBlankLines = (source: string) =>\n  source.replace(blankLinesRegex, \"\");\n\nexport const removeBlankLinesFromTabsBlock = (source?: string) =>\n  source &&\n  source.replace(tabsBlockRegex, occurrence => removeBlankLines(occurrence));\n\nexport const replaceAllLessThanChars = (source?: string) =>\n  source &&\n  source.replace(codeBlocksRegex, occurrence =>\n    occurrence.replace(/</gm, lessThanChar),\n  );\n","import React, { ReactType } from \"react\";\nimport RM, { ReactMarkdownProps, NodeType } from \"react-markdown\";\n\nimport parseHtml from \"./parseHTML\";\n\nimport * as Components from \"./components\";\nimport {\n  removeBlankLinesFromTabsBlock,\n  replaceAllLessThanChars,\n} from \"./helpers\";\n\ntype Renderers = { [key in NodeType | \"parsedHtml\"]: ReactType };\n\ninterface ReactMarkdownAdditionalProps {\n  headingPrefix?: string;\n  assetsPath?: string;\n  renderedFileName?: string;\n}\n\nconst ReactMarkdown: React.FunctionComponent<\n  ReactMarkdownProps & ReactMarkdownAdditionalProps\n> = ({\n  source,\n  escapeHtml = false,\n  headingPrefix = \"\",\n  assetsPath = \"\",\n  renderedFileName = \"\",\n}) => {\n  let processedSource = removeBlankLinesFromTabsBlock(source);\n  processedSource = replaceAllLessThanChars(processedSource);\n\n  const renderers: Renderers = {\n    root: Components.Root,\n    text: Components.Text,\n    break: Components.Break,\n    paragraph: Components.Paragraph,\n    emphasis: Components.Emphasis,\n    strong: Components.Strong,\n    thematicBreak: Components.ThematicBreak,\n    blockquote: Components.BlockQuote,\n    delete: Components.Delete,\n    link: (props: any) => (\n      <Components.Link {...props} assetsPath={assetsPath} />\n    ),\n    image: (props: any) => (\n      <Components.Image\n        {...props}\n        assetsPath={assetsPath}\n        renderedFileName={renderedFileName}\n      />\n    ),\n    linkReference: Components.LinkReference,\n    imageReference: Components.ImageReference,\n    table: Components.Table,\n    tableHead: Components.TableHead,\n    tableBody: Components.TableBody,\n    tableRow: Components.TableRow,\n    tableCell: Components.TableCell,\n    list: Components.List,\n    listItem: Components.ListItem,\n    definition: Components.Definition,\n    heading: (props: any) => (\n      <Components.Heading {...props} headingPrefix={headingPrefix} />\n    ),\n    inlineCode: Components.InlineCode,\n    code: Components.Code,\n    html: Components.HTML,\n    virtualHtml: Components.VirtualHTML,\n    parsedHtml: Components.ParsedHTML,\n  };\n\n  return (\n    <RM\n      source={processedSource}\n      escapeHtml={escapeHtml}\n      renderers={renderers}\n      astPlugins={[parseHtml]}\n    />\n  );\n};\n\nexport default ReactMarkdown;\n","import styled, { media } from \"@styled\";\n\n/* BlogPage */\nexport const BlogPageWrapper = styled.div`\n  margin: 75px 0 0 0;\n\n  ${media.phone`\n    margin-top: 25px;\n  `};\n`;\n\n/* Post */\nexport const PostWrapper = styled.article`\n  margin-bottom: 20px;\n  padding: 40px 0px;\n  border-bottom: 1px solid #e5e5e5;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  ${media.tablet`\n    &:last-child {\n      padding-bottom: 0;\n    }\n    margin-bottom: 0;\n  `};\n`;\n\n/* Post Header */\nexport const PostHeaderWrapper = styled.header`\n  margin: 0 0 50px 0;\n\n  h2 {\n    font-size: 36px;\n    margin-bottom: 16px;\n    color: rgb(72, 87, 102);\n    transition: color 0.2s ease-in-out;\n\n    &:hover {\n      color: rgb(11, 116, 222);\n    }\n  }\n`;\n\nexport const PostMetadata = styled.p`\n  margin-bottom: 0;\n  display: inline-block;\n  text-align: left;\n  font-size: 18px;\n`;\n\n/* Post Content */\nexport const PostContentWrapper = styled.main``;\n\n/* Post Footer */\nexport const PostFooterWrapper = styled.footer`\n  margin-top: 30px;\n`;\n\nexport const PostTagsWrapper = styled.ul`\n  list-style-type: none;\n  display: inline-block;\n  margin: 0;\n  margin-top: 0;\n`;\n\nexport const PostTag = styled.li`\n  display: inline-block;\n  margin-bottom: 15px;\n  margin-left: 15px;\n  font-size: 14px;\n\n  &:first-child {\n    margin-left: 0;\n    font-weight: 600;\n    font-size: 16px;\n\n    > svg {\n      margin-right: 6px;\n    }\n  }\n`;\n\n/* PrevNextSectionWrapper */\nexport const PrevNextSectionWrapper = styled.div`\n  margin-top: 75px;\n\n  a {\n    display: inline-block;\n\n    &:hover {\n      h4 {\n        color: rgb(11, 116, 222);\n      }\n    }\n  }\n\n  span {\n    font-size: 18px;\n    color: rgb(72, 87, 102);\n  }\n\n  svg {\n    position: absolute;\n    color: rgb(72, 87, 102);\n    top: 7px;\n  }\n`;\n\nexport const PrevWrapper = styled.div`\n  position: relative;\n  text-align: left;\n  min-width: 100%;\n\n  svg {\n    left: -18px;\n  }\n`;\n\nexport const NextWrapper = styled.div`\n  position: relative;\n  text-align: right;\n\n  svg {\n    right: -18px;\n  }\n`;\n\nexport const PrevNextSectionPostTitle = styled.h4`\n  transition: all 0.2s ease-in-out;\n  color: rgb(72, 87, 102);\n`;\n","import React from \"react\";\n\nimport Link from \"@components/shared/Link\";\nimport H from \"@components/shared/H\";\n\nimport {\n  FormattedMessage,\n  getTranslation,\n  injectIntl,\n  IntlInterface,\n} from \"@common/i18n\";\n\nimport { PostMetaDataAuthor, PostFieldsInfo } from \"./types\";\n\nimport { PostHeaderWrapper, PostMetadata } from \"./styled\";\n\ninterface PostHeaderProps {\n  title: string;\n  author: PostMetaDataAuthor;\n  postInfo: PostFieldsInfo;\n  path: string;\n}\n\nconst gt = getTranslation(\"blog\");\n\nconst PostHeader: React.FunctionComponent<PostHeaderProps & IntlInterface> = ({\n  title,\n  author: { name },\n  postInfo: { year, month, day },\n  path,\n  formatMessage,\n}) => {\n  const date = `${formatMessage({\n    id: `months.${month}.name`,\n  })} ${day}, ${year}`;\n\n  const metadata = (\n    <FormattedMessage\n      id={gt(\"postMetadata\")}\n      values={{\n        author: name,\n        date,\n      }}\n    />\n  );\n\n  return (\n    <PostHeaderWrapper>\n      <Link.Internal to={path}>\n        <H as=\"h2\">{title}</H>\n      </Link.Internal>\n      <PostMetadata>{metadata}</PostMetadata>\n    </PostHeaderWrapper>\n  );\n};\n\nexport default injectIntl(\"utils\")(PostHeader);\n","import React from \"react\";\n\nimport ReactMarkdown from \"@components/shared/ReactMarkdown\";\n\ninterface DefaultTemplatePostProps {\n  markdown: string;\n  assetsPath: string;\n}\n\nconst DefaultTemplatePost: React.FunctionComponent<\n  DefaultTemplatePostProps\n> = ({ markdown, assetsPath }) => (\n  <ReactMarkdown source={markdown} escapeHtml={false} assetsPath={assetsPath} />\n);\n\nexport default DefaultTemplatePost;\n","import styled from \"@styled\";\n\n/* Release Template */\nexport const ReleaseButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 50px;\n`;\n","import React from \"react\";\n\nimport { FormattedMessage } from \"@common/i18n\";\n\nimport ReactMarkdown from \"@components/shared/ReactMarkdown\";\nimport Button from \"@components/shared/Button\";\nimport Link from \"@components/shared/Link\";\n\nimport config from \"@config\";\n\nimport { ReleaseButtonsWrapper } from \"../styled\";\n\ninterface ReleaseTemplatePostProps {\n  markdown: string;\n  assetsPath: string;\n  releaseTag?: string;\n}\n\nconst ReleaseTemplatePost: React.FunctionComponent<\n  ReleaseTemplatePostProps\n> = ({ markdown, assetsPath, releaseTag }) => (\n  <>\n    {releaseTag && (\n      <ReleaseButtonsWrapper>\n        <Link.External\n          to={`${config.links.KYMA_REPOSITORY_LINK}/releases/${releaseTag}`}\n        >\n          <Button.Normal iconName=\"cloud-download-alt\" iconPrefix=\"fas\">\n            <FormattedMessage\n              id=\"blog.downloadButton\"\n              values={{\n                version: releaseTag,\n              }}\n            />\n          </Button.Normal>\n        </Link.External>\n      </ReleaseButtonsWrapper>\n    )}\n    <ReactMarkdown\n      source={markdown}\n      escapeHtml={false}\n      assetsPath={assetsPath}\n    />\n  </>\n);\n\nexport default ReleaseTemplatePost;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport DefaultTemplate from \"@components/blog/content/templates/Default\";\nimport ReleaseTemplate from \"@components/blog/content/templates/Release\";\n\nimport {\n  PostType,\n  PostMetaData,\n  PostTypeRelease,\n  PostTypeEvent,\n} from \"@components/blog/types\";\n\ninterface PostContentProps {\n  markdown: string;\n  assetsPath?: string;\n  metadata: PostMetaData;\n}\n\nconst PostContent: React.FunctionComponent<PostContentProps> = ({\n  markdown,\n  assetsPath = \"\",\n  metadata,\n}) => {\n  if (metadata.type) {\n    if (metadata.type === PostTypeRelease) {\n      return (\n        <ReleaseTemplate\n          markdown={markdown}\n          releaseTag={metadata.releaseTag}\n          assetsPath={assetsPath}\n        />\n      );\n    }\n  }\n\n  return <DefaultTemplate markdown={markdown} assetsPath={assetsPath} />;\n};\n\nexport default PostContent;\n","/* Post */\nexport interface Post {\n  id: string;\n  excerpt?: string;\n  rawMarkdownBody: string;\n  fields: PostFields;\n  frontmatter: PostMetaData;\n}\n\n/* Post Page Context */\nexport interface PostPageContext {\n  previous?: Post;\n  next?: Post;\n  assetsPath?: string;\n}\n\n/* Post fields */\nexport interface PostFields {\n  slug: string;\n  date: string;\n  postInfo: PostFieldsInfo;\n}\n\nexport interface PostFieldsInfo {\n  year: string;\n  month: string;\n  day: string;\n  fileName: string;\n}\n\n/* Post Metadata */\nexport interface PostMetaData extends PostTypeMetadata {\n  title: string;\n  author: PostMetaDataAuthor;\n  tags?: string[];\n}\n\nexport interface PostMetaDataAuthor {\n  name: string;\n  socialMedia?: {\n    github?: string;\n    twitter?: string;\n  };\n}\n\n/* Post types */\nexport type PostType = \"release\" | \"event\";\nexport const PostTypeRelease = \"release\";\nexport const PostTypeEvent = \"event\";\n\nexport interface PostTypeMetadata {\n  type?: PostType;\n  releaseTag?: string;\n}\n","import React from \"react\";\n\nimport Icon from \"@components/shared/Icon\";\n\nimport { FormattedMessage, getTranslation } from \"@common/i18n\";\n\nimport { PostFooterWrapper, PostTagsWrapper, PostTag } from \"./styled\";\n\ninterface PostFooterProps {\n  tags: string[];\n}\n\nconst gt = getTranslation(\"blog\");\n\nconst PostFooter: React.FunctionComponent<PostFooterProps> = ({\n  tags = [],\n}) => (\n  <PostFooterWrapper>\n    <PostTagsWrapper>\n      <FormattedMessage id={gt(\"tags\")}>\n        {data => (\n          <PostTag>\n            <Icon iconName=\"tags\" iconPrefix=\"fas\" />\n            {data}:\n          </PostTag>\n        )}\n      </FormattedMessage>\n      {tags.map((tag: string) => (\n        <PostTag key={tag}>#{tag}</PostTag>\n      ))}\n    </PostTagsWrapper>\n  </PostFooterWrapper>\n);\n\nexport default PostFooter;\n","import React from \"react\";\n\nimport { FormattedMessage } from \"@common/i18n\";\n\nimport Link from \"@components/shared/Link\";\nimport Button from \"@components/shared/Button\";\n\nimport PostHeader from \"@components/blog/PostHeader\";\nimport PostContent from \"@components/blog/content/PostContent\";\nimport PostFooter from \"@components/blog/PostFooter\";\nimport PrevNextSection from \"@components/blog/PrevNextSection\";\n\nimport { PostPageContext, PostMetaData, PostFields } from \"./types\";\n\nimport { PostWrapper, PostContentWrapper } from \"./styled\";\n\ninterface PostProps extends PostPageContext {\n  metadata: PostMetaData;\n  fields: PostFields;\n  markdown: string;\n  readMore?: boolean;\n}\n\nconst Post: React.FunctionComponent<PostProps> = ({\n  metadata: { title, author, tags = [] },\n  metadata,\n  fields: { slug, postInfo },\n  markdown,\n  assetsPath = \"\",\n  previous,\n  next,\n  readMore = false,\n}) => (\n  <PostWrapper>\n    <PostHeader title={title} author={author} path={slug} postInfo={postInfo} />\n    <PostContentWrapper>\n      <PostContent\n        markdown={markdown}\n        metadata={metadata}\n        assetsPath={assetsPath}\n      />\n    </PostContentWrapper>\n    {readMore && (\n      <Link.Internal to={slug}>\n        <Button.Emphasized size=\"sm\">\n          <FormattedMessage id=\"blog.readMoreButton\" />\n        </Button.Emphasized>\n      </Link.Internal>\n    )}\n    <PostFooter tags={tags} />\n    {/* {!readMore && (\n        <PrevNextSection next={next} previous={previous} />\n      )} */}\n  </PostWrapper>\n);\n\nexport default Post;\n","import React from \"react\";\n\nimport Grid from \"@styled/Grid\";\n\nimport Separator from \"@components/shared/Separator\";\n\nimport PostPage from \"@components/blog/Post\";\n\nimport { AllMarkdownRemarkNode } from \"@common/types\";\nimport { Post } from \"./types\";\n\nimport { BlogPageWrapper as Wrapper } from \"./styled\";\n\ntype AllMarkdownRemarkNodePost = AllMarkdownRemarkNode<Post>;\n\ninterface BlogPageProps {\n  nodes: AllMarkdownRemarkNodePost[];\n}\n\nexport const BlogPageWrapper: React.FunctionComponent = ({ children }) => (\n  <Grid.Container>\n    <Grid.Row>\n      <Grid.Unit df={1} md={0} />\n      <Grid.Unit df={10} md={12}>\n        <Wrapper>{children}</Wrapper>\n      </Grid.Unit>\n      <Grid.Unit df={1} md={0} />\n    </Grid.Row>\n  </Grid.Container>\n);\n\nconst BlogPage: React.FunctionComponent<BlogPageProps> = ({ nodes }) => (\n  <BlogPageWrapper>\n    {nodes.map((edge: AllMarkdownRemarkNodePost, index: number) => {\n      const post = edge.node;\n      return (\n        <PostPage\n          key={post.id}\n          metadata={post.frontmatter}\n          fields={post.fields}\n          markdown={post.excerpt || post.rawMarkdownBody}\n          readMore={true}\n        />\n      );\n    })}\n  </BlogPageWrapper>\n);\n\nexport default BlogPage;\n"],"sourceRoot":""}