{"version":3,"sources":["webpack:///./src/templates/BlogPost.tsx","webpack:///./src/components/blog/styled.ts","webpack:///./src/components/shared/ReactMarkdown/parseHTML/index.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Blockquote.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Break.tsx","webpack:///./src/components/shared/Tooltip/styled.ts","webpack:///./src/components/shared/Tooltip/index.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Code/CopyButton.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Code/theme.ts","webpack:///./src/components/shared/ReactMarkdown/components/Code/index.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Definition.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Delete.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Emphasis.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Heading.tsx","webpack:///./src/components/shared/ReactMarkdown/components/HTML.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Image.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ImageReference.tsx","webpack:///./src/components/shared/ReactMarkdown/components/EmbedVideo/helpers.ts","webpack:///./src/components/shared/ReactMarkdown/components/EmbedVideo/index.ts","webpack:///./src/components/shared/ReactMarkdown/components/InlineCode.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Link.tsx","webpack:///./src/components/shared/ReactMarkdown/components/LinkReference.tsx","webpack:///./src/components/shared/ReactMarkdown/components/List.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ListItem.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Paragraph.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ParsedHTML.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Root.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Strong.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Table.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableBody.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableCell.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableHead.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableRow.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Text.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ThematicBreak.tsx","webpack:///./src/components/shared/ReactMarkdown/components/VirtualHTML.tsx","webpack:///./src/components/shared/ReactMarkdown/index.tsx","webpack:///./src/components/blog/PostHeader.tsx","webpack:///./src/components/blog/content/templates/Default.tsx","webpack:///./src/components/blog/content/styled.ts","webpack:///./src/components/blog/content/templates/Release.tsx","webpack:///./src/components/blog/content/PostContent.tsx","webpack:///./src/components/blog/types.ts","webpack:///./src/components/blog/PostFooter.tsx","webpack:///./src/components/blog/Post.tsx","webpack:///./src/components/blog/BlogPage.tsx"],"names":["pageQuery","BlogPostTemplate","_ref","_ref$data$markdownRem","data","markdownRemark","rawMarkdownBody","frontmatter","fields","_ref$pageContext","pageContext","locale","previous","next","assetsPath","description","replace","substring","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout_Layout__WEBPACK_IMPORTED_MODULE_3__","pageTitle","title","pageDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2__","property","content","tags","map","tag","key","_components_blog_BlogPage__WEBPACK_IMPORTED_MODULE_5__","_components_blog_Post__WEBPACK_IMPORTED_MODULE_4__","metadata","markdown","BlogPageWrapper","styled","div","withConfig","displayName","componentId","media","phone","_templateObject","PostWrapper","article","tablet","_templateObject2","PostHeaderWrapper","header","PostMetadata","p","PostContentWrapper","main","PostFooterWrapper","footer","PostTagsWrapper","ul","PostTag","li","h4","htmlParser","isValidNode","node","type","processingInstructions","StyledBlockQuote","blockquote","BlockQuote","children","react_default","Break","Fragment","TooltipContainer","props","timeout","show","theme","fontSize","xs","placement","visible","TooltipWrapper","Tooltip","_ref$showFullTime","showFullTime","_ref$timeout","_ref$placement","_useState","useState","setShow","_useState2","setVisible","onMouseEnter","onMouseLeave","setTimeout","CopyButtonWrapper","StyledIcon","Icon","injectIntl","code","_ref$className","className","formatMessage","setPopup","useContext","PopupState","Context","shared_Tooltip","id","lib","text","onCopy","iconName","iconPrefix","plain","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","CodeWrapper","HighlightWrapper","customScrollBar","thumbBorderRadius","trackBorderRadius","StyledCopyButton","CopyButton","Code","language","value","es","Object","assign","defaultProps","_ref2","tokens","getLineProps","getTokenProps","line","i","token","tokenProps","includes","Definition","Delete","Emphasis","Heading","level","_ref$headingPrefix","headingPrefix","newLevel","headingTokenized","tokenize","shared_Link","Hash","to","chainIcon","H","as","data-scrollspy-node-type","HTML","StyledImage","img","Image","alt","src","_ref$assetsPath","renderedFileName","assetName","path","match","exec","splitedName","split","length","getAssetName","ImageReference","embedVideoHTML","options","videoId","_iterator","videoIdProcessors","_isArray","Array","isArray","_i","Symbol","iterator","done","processor","e","keys","TypeError","service","toLowerCase","readVideoId","videoService","getVideoService","url","iframeNode","width","height","noIframeBorder","additionalHTML","createIframe","videoUrl","embedUrl","URL","urlProcessing","toString","createUrl","message","EmbedVideo","videoOptions","defaultOptions","Math","round","ratio","overrideDefaultOptions","related","keywords","concat","knownPlatforms","join","re","RegExp","processValue","video","trim","StyledInlineCode","InlineCode","inline","embedVideo","dangerouslySetInnerHTML","__html","Link","href","startsWith","External","externalIcon","underline","Internal","LinkReference","StyledOl","ol","StyledUl","List","start","ordered","tight","depth","ListItem","checked","index","Paragraph","shared_Paragraph","ParsedHTML","element","StyledRoot","Root","StyledStrong","strong","bold","Strong","StyledTable","table","Table","columnAlignment","StyledTableBody","tbody","TableBody","StyledTableHeaderCell","align","StyledTableCell","TableCell","_ref$isHeader","isHeader","_ref$align","StyledTableHead","thead","TableHead","StyledTableRow","tr","TableRow","Text","ThematicBreak","VirtualHTML","ReactMarkdown","source","_ref$escapeHtml","escapeHtml","_ref$renderedFileName","renderers","root","Components","break","paragraph","emphasis","thematicBreak","delete","link","Link_Link","image","Image_Image","linkReference","imageReference","tableHead","tableBody","tableRow","tableCell","list","listItem","definition","heading","Heading_Heading","inlineCode","html","virtualHtml","parsedHtml","react_markdown_default","astPlugins","parseHtml","gt","getTranslation","PostHeader","name","author","date","i18n","values","DefaultTemplatePost","ReleaseButtonsWrapper","ReleaseTemplatePost","releaseTag","config","links","KYMA_REPOSITORY_LINK","Button","Normal","version","PostContent","Release","Default","PostFooter","_ref$tags","Post","_ref$metadata","_ref$metadata$tags","_ref$fields","slug","_ref$readMore","readMore","blog_PostHeader","content_PostContent","Emphasized","size","blog_PostFooter","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styled_Grid__WEBPACK_IMPORTED_MODULE_1__","_components_blog_Post__WEBPACK_IMPORTED_MODULE_2__","_styled__WEBPACK_IMPORTED_MODULE_3__","Container","Row","Unit","df","md","BlogPage","nodes","edge","post","excerpt"],"mappings":"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","file":"component---src-templates-blog-post-tsx-a7aea704f5994405a30f.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"@components/layout/Layout\";\nimport BlogPage from \"@components/blog/Post\";\nimport { BlogPageWrapper } from \"@components/blog/BlogPage\";\n\nimport {\n  AllFile,\n  AllFileImage,\n  MarkdownRemark,\n  PageContext,\n  IntlPageContext,\n} from \"@types\";\nimport { Post, PostPageContext } from \"@components/blog/types\";\n\nconst BlogPostTemplate: React.FunctionComponent<\n  MarkdownRemark<Post> & PageContext<IntlPageContext & PostPageContext>\n> = ({\n  data: {\n    markdownRemark: { rawMarkdownBody, frontmatter, fields },\n  },\n  pageContext: { locale, previous, next, assetsPath },\n}) => {\n  const description = `${rawMarkdownBody\n    .replace(/<(?:.|\\n)*?>/gm, \"\")\n    .substring(0, 297)}...`;\n\n  return (\n    <Layout\n      locale={locale}\n      pageTitle={frontmatter.title}\n      pageDescription={description}\n    >\n      <Helmet>\n        <meta property=\"og:type\" content=\"article\" />\n        {frontmatter &&\n          frontmatter.tags &&\n          frontmatter.tags.map(tag => (\n            <meta key={tag} property=\"article:tag\" content={tag} />\n          ))}\n      </Helmet>\n      <BlogPageWrapper>\n        <BlogPage\n          metadata={frontmatter}\n          markdown={rawMarkdownBody}\n          fields={fields}\n          assetsPath={assetsPath}\n          previous={previous}\n          next={next}\n        />\n      </BlogPageWrapper>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      ...BlogPost\n    }\n  }\n`;\n\nexport default BlogPostTemplate;\n","import styled, { media } from \"@styled\";\n\n/* BlogPage */\nexport const BlogPageWrapper = styled.div`\n  margin: 75px 0 0 0;\n\n  ${media.phone`\n    margin-top: 25px;\n  `};\n`;\n\n/* Post */\nexport const PostWrapper = styled.article`\n  margin-bottom: 20px;\n  padding: 40px 0px;\n  border-bottom: 1px solid #e5e5e5;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  ${media.tablet`\n    &:last-child {\n      padding-bottom: 0;\n    }\n    margin-bottom: 0;\n  `};\n`;\n\n/* Post Header */\nexport const PostHeaderWrapper = styled.header`\n  margin: 0 0 50px 0;\n\n  h2 {\n    font-size: 36px;\n    margin-bottom: 16px;\n    color: rgb(72, 87, 102);\n    transition: color 0.2s ease-in-out;\n\n    &:hover {\n      color: rgb(11, 116, 222);\n    }\n  }\n`;\n\nexport const PostMetadata = styled.p`\n  margin-bottom: 0;\n  display: inline-block;\n  text-align: left;\n  font-size: 18px;\n`;\n\n/* Post Content */\nexport const PostContentWrapper = styled.main``;\n\n/* Post Footer */\nexport const PostFooterWrapper = styled.footer`\n  margin-top: 30px;\n`;\n\nexport const PostTagsWrapper = styled.ul`\n  list-style-type: none;\n  display: inline-block;\n  margin: 0;\n  margin-top: 0;\n`;\n\nexport const PostTag = styled.li`\n  display: inline-block;\n  margin-bottom: 15px;\n  margin-left: 15px;\n  font-size: 14px;\n\n  &:first-child {\n    margin-left: 0;\n    font-weight: 600;\n    font-size: 16px;\n\n    > svg {\n      margin-right: 6px;\n    }\n  }\n`;\n\n/* PrevNextSectionWrapper */\nexport const PrevNextSectionWrapper = styled.div`\n  margin-top: 75px;\n\n  a {\n    display: inline-block;\n\n    &:hover {\n      h4 {\n        color: rgb(11, 116, 222);\n      }\n    }\n  }\n\n  span {\n    font-size: 18px;\n    color: rgb(72, 87, 102);\n  }\n\n  svg {\n    position: absolute;\n    color: rgb(72, 87, 102);\n    top: 7px;\n  }\n`;\n\nexport const PrevWrapper = styled.div`\n  position: relative;\n  text-align: left;\n  min-width: 100%;\n\n  svg {\n    left: -18px;\n  }\n`;\n\nexport const NextWrapper = styled.div`\n  position: relative;\n  text-align: right;\n\n  svg {\n    right: -18px;\n  }\n`;\n\nexport const PrevNextSectionPostTitle = styled.h4`\n  transition: all 0.2s ease-in-out;\n  color: rgb(72, 87, 102);\n`;\n","// @ts-ignore\nimport htmlParser from \"react-markdown/plugins/html-parser\";\n\nimport tabs from \"./Tabs\";\n\nconst isValidNode = (node: any) => node.type !== \"script\";\n\nexport default htmlParser({\n  isValidNode: isValidNode,\n  processingInstructions: [\n    // Tabs processing\n    // tabs,\n  ],\n});\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledBlockQuote = styled.blockquote`\n  margin-left: 0;\n  padding-left: 1.6rem;\n  border-left: 3px solid rgba(27, 31, 35, 0.2);\n`;\n\ninterface BlockQuoteProps {}\n\nexport const BlockQuote: React.FunctionComponent<BlockQuoteProps> = ({\n  children,\n}) => {\n  return <StyledBlockQuote>{children}</StyledBlockQuote>;\n};\n","import React from \"react\";\n\ninterface BreakProps {}\n\nexport const Break: React.FunctionComponent<BreakProps> = ({ children }) => {\n  return <>{children}</>;\n};\n","import styled from \"@styled\";\n\ninterface TooltipContainerProps {\n  placement?: \"left\" | \"top\" | \"right\" | \"bottom\";\n  timeout?: number;\n  show?: boolean;\n  visible?: boolean;\n}\n\nexport const TooltipContainer = styled.div`\n  transition: all ${props => `${props.timeout}ms`} ease-in-out;\n  visibility: ${(props: TooltipContainerProps) =>\n    props.show ? \"visible\" : \"hidden\"};\n  position: absolute;\n  z-index: 99;\n  padding: 5px 7px;\n  font-size: ${props => props.theme.fontSize.xs};\n  color: #fff;\n  background-color: #0077e1;\n  box-shadow: 0 0 6px 0 rgba(137, 165, 199, 0.42);\n  border-radius: 3px;\n  font-size: 10px;\n  font-family: Poppins;\n  line-height: 10px;\n  min-width: 80px;\n  max-width: 260px;\n  width: auto;\n  text-align: center;\n  ${props => (props.placement === \"top\" ? \"bottom: 100%;\" : \"top: 100%\")};\n  right: 50%;\n  transform: translateX(50%);\n  opacity: ${props => (props.visible ? \"1\" : \"0\")};\n\n  &:after {\n    content: \"\";\n    border: 6px solid;\n    border-color: ${props => {\n      switch (props.placement) {\n        case \"bottom\":\n          return `transparent transparent #0077e1`;\n        default:\n          `transparent transparent #0077e1`;\n      }\n    }};\n    right: 50%;\n    transform: translateX(6px);\n    margin-left: -10px;\n    position: absolute;\n    ${props =>\n      props.placement === \"top\"\n        ? \"top: 100%; margin-top: -1px;\"\n        : \"bottom: 100%; margin-bottom: -1px;\"};\n  }\n`;\n\nexport const TooltipWrapper = styled.div`\n  font-family: \"72\";\n  position: relative;\n  display: inline-block;\n\n  &:hover ${TooltipContainer} {\n    visibility: visible;\n    opacity: 1;\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport { TooltipWrapper, TooltipContainer } from \"./styled\";\n\ninterface TooltipProps {\n  content: any;\n  showFullTime?: boolean;\n  timeout?: number;\n  placement?: \"left\" | \"top\" | \"right\" | \"bottom\";\n}\n\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({\n  children,\n  content,\n  showFullTime = false,\n  timeout = 200,\n  placement = \"top\",\n}) => {\n  const [show, setShow] = useState(false);\n  const [visible, setVisible] = useState(false);\n\n  const handleShow = () => {\n    setShow(true);\n    setVisible(true);\n  };\n\n  const handleHide = () => {\n    setVisible(false);\n\n    if (!showFullTime) {\n      setTimeout(() => setShow && setShow(false), timeout);\n    }\n  };\n\n  return (\n    <TooltipWrapper onMouseEnter={handleShow} onMouseLeave={handleHide}>\n      {children}\n      <TooltipContainer\n        placement={placement}\n        timeout={timeout}\n        show={show}\n        visible={visible}\n      >\n        {content}\n      </TooltipContainer>\n    </TooltipWrapper>\n  );\n};\n\nexport default Tooltip;\n","import React, { useContext } from \"react\";\nimport styled from \"@styled\";\n\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nimport { PopupState } from \"@common/state\";\nimport { injectIntl, IntlInterface } from \"@common/i18n\";\n\nimport Icon from \"@components/shared/Icon\";\nimport Tooltip from \"@components/shared/Tooltip\";\n\nconst CopyButtonWrapper = styled.div`\n  user-select: none;\n`;\n\nconst StyledIcon = styled(Icon)`\n  cursor: pointer;\n  width: 28px;\n  min-width: 28px;\n  height: 28px;\n  min-height: 28px;\n  padding: 6px;\n  border-radius: 100%;\n  box-shadow: 0 0 6px 0 rgba(137, 165, 199, 0.42);\n  background-color: #fff;\n  color: #c9c9c9;\n  transition: color 0.2s ease-in-out;\n\n  &:hover {\n    color: #0073e6;\n  }\n`;\n\ninterface CopyButtonProps {\n  code: string;\n  className?: string;\n}\n\nconst CopyButton: React.FunctionComponent<IntlInterface & CopyButtonProps> = ({\n  code,\n  className = \"\",\n  formatMessage,\n}) => {\n  const { setPopup } = useContext(PopupState.Context);\n\n  return (\n    <CopyButtonWrapper className={className}>\n      <Tooltip\n        content={formatMessage({ id: \"copyButtonTooltip\" })}\n        placement=\"bottom\"\n      >\n        <CopyToClipboard\n          text={code}\n          onCopy={() => {\n            setPopup(formatMessage({ id: \"copyPopup\" }));\n          }}\n        >\n          <span>\n            <StyledIcon iconName=\"copy\" iconPrefix=\"far\" />\n          </span>\n        </CopyToClipboard>\n      </Tooltip>\n    </CopyButtonWrapper>\n  );\n};\n\nexport default injectIntl(\"utils\")(CopyButton);\n","export default {\n  plain: {\n    backgroundColor: \"rgb(250, 250, 250)\",\n    color: \"rgb(80, 161, 79)\",\n  },\n  styles: [\n    {\n      types: [\"string\"],\n      style: {\n        color: \"rgb(80, 161, 79)\",\n      },\n    },\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n      style: {\n        color: \"rgb(160, 161, 167)\",\n      },\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7,\n      },\n    },\n    {\n      types: [\"tag\", \"operator\", \"number\"],\n      style: {\n        color: \"#063289\",\n      },\n    },\n    {\n      types: [\"property\", \"function\"],\n      style: {\n        color: \"#b29762\",\n      },\n    },\n    {\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\n      style: {\n        color: \"#2d2006\",\n      },\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#896724\",\n      },\n    },\n    {\n      types: [\"key\"],\n      style: {\n        color: \"rgb(152, 104, 1)\",\n      },\n    },\n    {\n      types: [\n        \"boolean\",\n        \"entity\",\n        \"url\",\n        \"attr-value\",\n        \"keyword\",\n        \"control\",\n        \"directive\",\n        \"unit\",\n        \"statement\",\n        \"regex\",\n        \"at-rule\",\n      ],\n      style: {\n        color: \"#728fcb\",\n      },\n    },\n    {\n      types: [\"placeholder\", \"variable\"],\n      style: {\n        color: \"#93abdc\",\n      },\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\",\n      },\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\",\n      },\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\",\n      },\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"#896724\",\n      },\n    },\n  ],\n};\n","import React from \"react\";\nimport styled from \"@styled\";\nimport { customScrollBar } from \"@styled/mixins\";\n\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\n\nimport CopyButton from \"./CopyButton\";\nimport theme from \"./theme\";\n\nconst CodeWrapper = styled.div`\n  position: relative;\n  margin: 0 0 16px 0;\n`;\n\nconst HighlightWrapper = styled.div`\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier,\n    monospace !important;\n  background: rgb(250, 250, 250);\n  border: 1px solid rgb(229, 229, 229);\n  border-radius: 5px;\n  padding-bottom: 16px;\n  white-space: nowrap;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n\n  ${customScrollBar({\n    thumbBorderRadius: \"0 0 4px 4px\",\n    trackBorderRadius: \"0 0 4px 4px\",\n  })}\n\n  > pre {\n    padding: 16px 16px 0 16px;\n    margin-bottom: 0 !important;\n\n    > code {\n      word-break: normal;\n      white-space: pre;\n      overflow-wrap: normal;\n\n      > div span:last-child {\n        padding-right: 16px;\n      }\n    }\n  }\n`;\n\nconst StyledCopyButton = styled(CopyButton)`\n  position: absolute;\n  top: -10px;\n  right: -10px;\n`;\n\ninterface CodeProps {\n  language: string;\n  value: string;\n}\n\nexport const Code: React.FunctionComponent<CodeProps> = ({\n  language,\n  value,\n  children,\n}) => {\n  const code = children ? children : value;\n\n  return (\n    <CodeWrapper>\n      <StyledCopyButton code={value} />\n      <HighlightWrapper>\n        <Highlight\n          {...defaultProps}\n          code={code}\n          theme={theme}\n          language={language ? language : \"yaml\"}\n        >\n          {({ className, style, tokens, getLineProps, getTokenProps }: any) => (\n            <pre className={className} style={style}>\n              <code>\n                {tokens.map((line: any, i: number) => (\n                  <div {...getLineProps({ line, key: i })}>\n                    {line.map((token: any, key: number) => {\n                      const tokenProps = getTokenProps({ token, key });\n\n                      return !(\n                        tokenProps.className.includes(\"plain\") &&\n                        !tokenProps.children\n                      ) ? (\n                        <span {...getTokenProps({ token, key })} />\n                      ) : null;\n                    })}\n                  </div>\n                ))}\n              </code>\n            </pre>\n          )}\n        </Highlight>\n      </HighlightWrapper>\n    </CodeWrapper>\n  );\n};\n","import React from \"react\";\n\ninterface DefinitionProps {}\n\nexport const Definition: React.FunctionComponent<DefinitionProps> = ({\n  children,\n}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\ninterface DeleteProps {}\n\nexport const Delete: React.FunctionComponent<DeleteProps> = ({ children }) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\ninterface EmphasisProps {}\n\nexport const Emphasis: React.FunctionComponent<EmphasisProps> = ({\n  children,\n}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nimport H from \"@components/shared/H\";\nimport Link from \"@components/shared/Link\";\n\nimport { tokenize } from \"@common/utils\";\n\ninterface HeadingProps {\n  level: 1 | 2 | 3 | 4 | 5 | 6;\n  headingPrefix?: string;\n}\n\nexport const Heading: React.FunctionComponent<HeadingProps> = ({\n  level,\n  headingPrefix = \"\",\n  children,\n}) => {\n  const newLevel = level + 2 >= 6 ? 6 : level + 2;\n  const headingTokenized = tokenize((children as any[])[0].props\n    .value as string);\n\n  const id = (headingPrefix\n    ? `${headingPrefix}-${headingTokenized}`\n    : headingTokenized\n  ).replace(/[^a-zA-Z0-9]/g, \"-\");\n\n  return (\n    <Link.Hash to={id} chainIcon>\n      <H as={`h${newLevel}`} id={id} data-scrollspy-node-type=\"header\">\n        {children}\n      </H>\n    </Link.Hash>\n  );\n};\n","import React from \"react\";\n\ninterface HTMLProps {}\n\nexport const HTML: React.FunctionComponent<HTMLProps> = () => {\n  return null;\n};\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledImage = styled.img`\n  margin: 16px 0;\n  border-radius: 3px;\n`;\n\ninterface ImageProps {\n  alt: string;\n  src: string;\n  assetsPath?: string;\n  renderedFileName?: string;\n}\n\nexport const Image: React.FunctionComponent<ImageProps> = ({\n  alt,\n  src,\n  assetsPath = \"\",\n  renderedFileName = \"\",\n}) => {\n  const getAssetName = (path: string): string => {\n    const fileNameRegex = /(.*?)\\/(.*?).(jpeg|jpg|gif|png|svg)$/;\n    const match = fileNameRegex.exec(path);\n\n    if (match && match[2]) {\n      const splitedName = match[2].split(\"/\");\n      return `${splitedName[splitedName.length - 1]}.${match[3]}`;\n    }\n    return \"\";\n  };\n\n  if (!assetsPath) return null;\n\n  const assetName = getAssetName(src);\n  if (!assetName) return null;\n\n  return <StyledImage src={`${assetsPath}${assetName}`} alt={alt} />;\n};\n","import React from \"react\";\n\ninterface ImageReferenceProps {}\n\nexport const ImageReference: React.FunctionComponent<\n  ImageReferenceProps\n> = () => {\n  return null;\n};\n","import { Url } from \"url\";\n\nimport {\n  getVideoService,\n  videoIdProcessors,\n} from \"gatsby-remark-embed-video/src/config\";\nimport {\n  IEmbedVideoOptions,\n  IVideoId,\n  IVideoService,\n} from \"gatsby-remark-embed-video/src/interfaces\";\n\nexport function embedVideoHTML(\n  type: string,\n  id: string,\n  options: IEmbedVideoOptions,\n): string {\n  try {\n    const videoId: IVideoId = readVideoId(type, id);\n\n    const videoService = getVideoService(videoId.service);\n    const url = createUrl(videoId.id, videoService, options);\n    let iframe = createIframe(url, videoService, options);\n    return iframe;\n  } catch (e) {\n    return `<p style=\"color: red\">Error: ${e.message}</p>`;\n  }\n}\n\nfunction readVideoId(type: string, id: string): IVideoId {\n  let videoId;\n  for (let processor of videoIdProcessors) {\n    try {\n      videoId = processor(id);\n    } catch (e) {\n      videoId = {};\n    }\n\n    if (Object.keys(videoId).length !== 0) {\n      return videoId as IVideoId;\n    }\n  }\n\n  if (type === \"video\") {\n    throw new TypeError(\"Id could not be processed\");\n  }\n\n  return {\n    id: id,\n    service: type.toLowerCase(),\n  };\n}\n\nfunction createUrl(\n  videoId: string,\n  videoService: IVideoService,\n  options: IEmbedVideoOptions,\n): string {\n  const videoUrl = videoService.embedUrl(videoId);\n  let url = new URL(videoUrl);\n\n  if (videoService.urlProcessing) {\n    url = videoService.urlProcessing(videoId, url, options);\n  }\n\n  return url.toString();\n}\n\nfunction createIframe(\n  url: string,\n  videoService: IVideoService,\n  options: IEmbedVideoOptions,\n) {\n  let iframeNode = `\n        <div class=\"embedVideo-container\">\n            <iframe \n              width=\"${options.width}\" \n              height=\"${options.height}\" \n              src=\"${url}\"\n              class=\"embedVideo-iframe\" \n              allowfullscreen\n            ></iframe>\n        </div>`;\n  if (options.noIframeBorder) {\n    iframeNode += `\n      <style>\n        .embedVideo-iframe {\n          border: 0\n        }\n      </style>`;\n  }\n\n  if (videoService.additionalHTML) {\n    iframeNode += videoService.additionalHTML;\n  }\n\n  return iframeNode;\n}\n","import { IEmbedVideoOptions } from \"gatsby-remark-embed-video/src/interfaces\";\nimport {\n  defaultOptions,\n  knownPlatforms,\n} from \"gatsby-remark-embed-video/src/config\";\n\nimport { embedVideoHTML } from \"./helpers\";\n\nconst overrideDefaultOptions = (\n  options?: IEmbedVideoOptions,\n): IEmbedVideoOptions => {\n  const videoOptions = options\n    ? { ...defaultOptions, ...options }\n    : { ...defaultOptions };\n\n  if (!videoOptions.height) {\n    videoOptions.height = Math.round(videoOptions.width / videoOptions.ratio);\n  }\n\n  return videoOptions;\n};\n\nexport default (value: string) => {\n  const options = overrideDefaultOptions({\n    width: 850,\n    ratio: 1.77,\n    related: false,\n    noIframeBorder: true,\n  });\n\n  const keywords = [...knownPlatforms(), \"video\"].join(\"|\");\n  const re = new RegExp(`\\(${keywords}\\):\\(\\.\\*\\)`, \"i\");\n\n  const processValue = value.match(re);\n  if (processValue) {\n    const type = processValue[1];\n    const id = processValue[2].trim();\n\n    const video = embedVideoHTML(type, id, options);\n\n    if (video.includes(\"Error\")) return null;\n    return video;\n  }\n  return null;\n};\n","import React from \"react\";\nimport styled from \"@styled\";\n\nimport embedVideo from \"./EmbedVideo\";\n\nconst StyledInlineCode = styled.code`\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier,\n    monospace;\n  font-size: 85%;\n  background-color: rgba(27, 31, 35, 0.05);\n  padding: 0.2em 0.4em;\n  margin: 0;\n  border-radius: 3px;\n`;\n\ninterface InlineCodeProps {\n  inline: boolean;\n  value: string;\n}\n\nexport const InlineCode: React.FunctionComponent<InlineCodeProps> = ({\n  inline = true,\n  value,\n  children,\n}) => {\n  let video = null;\n  if (value) video = embedVideo(value);\n\n  return video ? (\n    <div dangerouslySetInnerHTML={{ __html: video }} />\n  ) : (\n    <StyledInlineCode>{children === value ? value : children}</StyledInlineCode>\n  );\n};\n","import React from \"react\";\n\nimport L from \"@components/shared/Link\";\n\ninterface LinkProps {\n  href: string;\n  assetsPath?: string;\n}\n\nexport const Link: React.FunctionComponent<LinkProps> = ({\n  href,\n  assetsPath = \"\",\n  children,\n}) => {\n  const getAssetName = (path: string): string => {\n    const fileNameRegex = /(.*?)\\/(.*?).(jpeg|jpg|gif|png|svg|json|yaml|yml)$/;\n    const match = fileNameRegex.exec(path);\n\n    if (match && match[2]) {\n      const splitedName = match[2].split(\"/\");\n      return `${splitedName[splitedName.length - 1]}.${match[3]}`;\n    }\n    return \"\";\n  };\n\n  if (href.startsWith(\"http\")) {\n    return (\n      <L.External to={href} externalIcon underline>\n        {children}\n      </L.External>\n    );\n  }\n  if (href.startsWith(\"#\")) {\n    return (\n      <L.Hash to={href} underline>\n        {children}\n      </L.Hash>\n    );\n  }\n\n  const assetName = getAssetName(href);\n  if (assetName) {\n    return <a href={`${assetsPath}${assetName}`}>{children}</a>;\n  }\n  return (\n    <L.Internal to={href} underline>\n      {children}\n    </L.Internal>\n  );\n};\n","import React from \"react\";\n\ninterface LinkReferenceProps {}\n\nexport const LinkReference: React.FunctionComponent<\n  LinkReferenceProps\n> = () => {\n  return null;\n};\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledOl = styled.ol`\n  list-style-type: decimal;\n  margin-left: 28px;\n`;\n\nconst StyledUl = styled.ul`\n  list-style-type: disc;\n  margin-left: 20px;\n`;\n\ninterface ListProps {\n  start: number;\n  ordered: boolean;\n  tight: boolean;\n  depth: number;\n}\n\nexport const List: React.FunctionComponent<ListProps> = ({\n  start,\n  ordered,\n  tight,\n  depth,\n  children,\n}) => {\n  if (ordered) {\n    return <StyledOl start={start}>{children}</StyledOl>;\n  }\n  return <StyledUl>{children}</StyledUl>;\n};\n","import React from \"react\";\n\ninterface ListItemProps {\n  checked: boolean | null;\n  tight: boolean;\n  ordered: boolean;\n  index: number;\n}\n\nexport const ListItem: React.FunctionComponent<ListItemProps> = ({\n  checked,\n  tight,\n  ordered,\n  index,\n  children,\n}) => {\n  return <li key={index}>{children}</li>;\n};\n","import React from \"react\";\n\nimport P from \"@components/shared/Paragraph\";\n\ninterface ParagraphProps {}\n\nexport const Paragraph: React.FunctionComponent<ParagraphProps> = ({\n  children,\n}) => {\n  return <P>{children}</P>;\n};\n","import React from \"react\";\n\ninterface ParsedHTMLProps {\n  element: any;\n}\n\nexport const ParsedHTML: React.FunctionComponent<ParsedHTMLProps> = ({\n  element,\n}) => {\n  return <>{element}</>;\n};\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledRoot = styled.div`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial,\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n`;\n\nexport const Root: React.FunctionComponent = ({ children }) => {\n  return <StyledRoot>{children}</StyledRoot>;\n};\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledStrong = styled.strong`\n  font-weight: ${props => props.theme.fontWeight.bold};\n`;\n\ninterface StrongProps {}\n\nexport const Strong: React.FunctionComponent<StrongProps> = ({ children }) => {\n  return <StyledStrong>{children}</StyledStrong>;\n};\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTable = styled.table`\n  display: block;\n  width: 100%;\n  overflow: auto;\n`;\n\ninterface TableProps {\n  columnAlignment: AlignType;\n}\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  columnAlignment,\n  children,\n}) => {\n  return <StyledTable>{children}</StyledTable>;\n};\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTableBody = styled.tbody``;\n\ninterface TableBodyProps {\n  columnAlignment: AlignType;\n}\n\nexport const TableBody: React.FunctionComponent<TableBodyProps> = ({\n  columnAlignment,\n  children,\n}) => {\n  return <StyledTableBody>{children}</StyledTableBody>;\n};\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\ninterface TableCellProps {\n  align: AlignType;\n}\n\nconst StyledTableHeaderCell = styled(\"th\")<TableCellProps>`\n  text-align: ${props => props.align};\n  padding: 8px 13px;\n  display: table-cell;\n  vertical-align: middle;\n  border: 1px solid rgb(223, 226, 229);\n\n  &:first-child {\n    padding-left: 13px;\n  }\n\n  &:last-child {\n    padding-right: 13px;\n  }\n`;\n\nconst StyledTableCell = styled(\"td\")<TableCellProps>`\n  text-align: ${props => props.align};\n  padding: 8px 13px;\n  display: table-cell;\n  vertical-align: middle;\n  border: 1px solid rgb(223, 226, 229);\n\n  &:first-child {\n    padding-left: 13px;\n  }\n\n  &:last-child {\n    padding-right: 13px;\n  }\n`;\n\ninterface TableCellProps {\n  isHeader: boolean;\n  align: AlignType;\n}\n\nexport const TableCell: React.FunctionComponent<TableCellProps> = ({\n  isHeader = false,\n  align = \"left\",\n  children,\n}) => {\n  return isHeader ? (\n    <StyledTableHeaderCell align={align}>{children}</StyledTableHeaderCell>\n  ) : (\n    <StyledTableCell align={align}>{children}</StyledTableCell>\n  );\n};\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTableHead = styled.thead``;\n\ninterface TableHeadProps {\n  columnAlignment: AlignType;\n}\n\nexport const TableHead: React.FunctionComponent<TableHeadProps> = ({\n  columnAlignment,\n  children,\n}) => {\n  return <StyledTableHead>{children}</StyledTableHead>;\n};\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTableRow = styled.tr`\n  &:nth-child(2n) {\n    background-color: rgb(246, 248, 250);\n  }\n`;\n\ninterface TableRowProps {\n  isHeader: boolean;\n  columnAlignment: AlignType;\n}\n\nexport const TableRow: React.FunctionComponent<TableRowProps> = ({\n  isHeader = false,\n  columnAlignment,\n  children,\n}) => {\n  return <StyledTableRow>{children}</StyledTableRow>;\n};\n","import React from \"react\";\n\ninterface TextProps {}\n\nexport const Text: React.FunctionComponent<TextProps> = ({ children }) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\ninterface ThematicBreakProps {}\n\nexport const ThematicBreak: React.FunctionComponent<ThematicBreakProps> = ({\n  children,\n}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\ninterface VirtualHTMLProps {}\n\nexport const VirtualHTML: React.FunctionComponent<VirtualHTMLProps> = () => {\n  return null;\n};\n","import React, { ReactType } from \"react\";\nimport RM, { ReactMarkdownProps, NodeType } from \"react-markdown\";\n\nimport parseHtml from \"./parseHTML\";\n\nimport * as Components from \"./components\";\n\ntype Renderers = { [key in NodeType | \"parsedHtml\"]: ReactType };\n\ninterface ReactMarkdownAdditionalProps {\n  headingPrefix?: string;\n  assetsPath?: string;\n  renderedFileName?: string;\n}\n\nconst ReactMarkdown: React.FunctionComponent<\n  ReactMarkdownProps & ReactMarkdownAdditionalProps\n> = ({\n  source,\n  escapeHtml = false,\n  headingPrefix = \"\",\n  assetsPath = \"\",\n  renderedFileName = \"\",\n}) => {\n  const renderers: Renderers = {\n    root: Components.Root,\n    text: Components.Text,\n    break: Components.Break,\n    paragraph: Components.Paragraph,\n    emphasis: Components.Emphasis,\n    strong: Components.Strong,\n    thematicBreak: Components.ThematicBreak,\n    blockquote: Components.BlockQuote,\n    delete: Components.Delete,\n    link: (props: any) => (\n      <Components.Link {...props} assetsPath={assetsPath} />\n    ),\n    image: (props: any) => (\n      <Components.Image\n        {...props}\n        assetsPath={assetsPath}\n        renderedFileName={renderedFileName}\n      />\n    ),\n    linkReference: Components.LinkReference,\n    imageReference: Components.ImageReference,\n    table: Components.Table,\n    tableHead: Components.TableHead,\n    tableBody: Components.TableBody,\n    tableRow: Components.TableRow,\n    tableCell: Components.TableCell,\n    list: Components.List,\n    listItem: Components.ListItem,\n    definition: Components.Definition,\n    heading: (props: any) => (\n      <Components.Heading {...props} headingPrefix={headingPrefix} />\n    ),\n    inlineCode: Components.InlineCode,\n    code: Components.Code,\n    html: Components.HTML,\n    virtualHtml: Components.VirtualHTML,\n    parsedHtml: Components.ParsedHTML,\n  };\n\n  return (\n    <RM\n      source={source}\n      escapeHtml={escapeHtml}\n      renderers={renderers}\n      astPlugins={[parseHtml]}\n    />\n  );\n};\n\nexport default ReactMarkdown;\n","import React from \"react\";\n\nimport Link from \"@components/shared/Link\";\nimport H from \"@components/shared/H\";\n\nimport { FormattedMessage, getTranslation } from \"@common/i18n\";\n\nimport { PostMetaDataAuthor } from \"./types\";\n\nimport { PostHeaderWrapper, PostMetadata } from \"./styled\";\n\ninterface PostHeaderProps {\n  title: string;\n  author: PostMetaDataAuthor;\n  date: string;\n  path: string;\n}\n\nconst gt = getTranslation(\"blog\");\n\nconst PostHeader: React.FunctionComponent<PostHeaderProps> = ({\n  title,\n  author: { name },\n  date,\n  path,\n}) => {\n  const metadata = (\n    <FormattedMessage\n      id={gt(\"postMetadata\")}\n      values={{\n        author: name,\n        date: date,\n      }}\n    />\n  );\n\n  return (\n    <PostHeaderWrapper>\n      <Link.Internal to={path}>\n        <H as=\"h2\">{title}</H>\n      </Link.Internal>\n      <PostMetadata>{metadata}</PostMetadata>\n    </PostHeaderWrapper>\n  );\n};\n\nexport default PostHeader;\n","import React from \"react\";\n\nimport ReactMarkdown from \"@components/shared/ReactMarkdown\";\n\ninterface DefaultTemplatePostProps {\n  markdown: string;\n  assetsPath: string;\n}\n\nconst DefaultTemplatePost: React.FunctionComponent<\n  DefaultTemplatePostProps\n> = ({ markdown, assetsPath }) => {\n  return (\n    <ReactMarkdown\n      source={markdown}\n      escapeHtml={false}\n      assetsPath={assetsPath}\n    />\n  );\n};\n\nexport default DefaultTemplatePost;\n","import styled from \"@styled\";\n\n/* Release Template */\nexport const ReleaseButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 50px;\n`;\n","import React from \"react\";\n\nimport { FormattedMessage } from \"@common/i18n\";\n\nimport ReactMarkdown from \"@components/shared/ReactMarkdown\";\nimport Button from \"@components/shared/Button\";\nimport Link from \"@components/shared/Link\";\n\nimport config from \"@config\";\n\nimport { ReleaseButtonsWrapper } from \"../styled\";\n\ninterface ReleaseTemplatePostProps {\n  markdown: string;\n  assetsPath: string;\n  releaseTag?: string;\n}\n\nconst ReleaseTemplatePost: React.FunctionComponent<\n  ReleaseTemplatePostProps\n> = ({ markdown, assetsPath, releaseTag }) => (\n  <>\n    {releaseTag && (\n      <ReleaseButtonsWrapper>\n        <Link.External\n          to={`${config.links.KYMA_REPOSITORY_LINK}/releases/${releaseTag}`}\n        >\n          <Button.Normal iconName=\"cloud-download-alt\" iconPrefix=\"fas\">\n            <FormattedMessage\n              id=\"blog.downloadButton\"\n              values={{\n                version: releaseTag,\n              }}\n            />\n          </Button.Normal>\n        </Link.External>\n      </ReleaseButtonsWrapper>\n    )}\n    <ReactMarkdown\n      source={markdown}\n      escapeHtml={false}\n      assetsPath={assetsPath}\n    />\n  </>\n);\n\nexport default ReleaseTemplatePost;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport DefaultTemplate from \"@components/blog/content/templates/Default\";\nimport ReleaseTemplate from \"@components/blog/content/templates/Release\";\n\nimport {\n  PostType,\n  PostMetaData,\n  PostTypeRelease,\n  PostTypeEvent,\n} from \"@components/blog/types\";\n\ninterface PostContentProps {\n  markdown: string;\n  assetsPath?: string;\n  metadata: PostMetaData;\n}\n\nconst PostContent: React.FunctionComponent<PostContentProps> = ({\n  markdown,\n  assetsPath = \"\",\n  metadata,\n}) => {\n  if (metadata.type) {\n    if (metadata.type === PostTypeRelease)\n      return (\n        <ReleaseTemplate\n          markdown={markdown}\n          releaseTag={metadata.releaseTag}\n          assetsPath={assetsPath}\n        />\n      );\n  }\n\n  return <DefaultTemplate markdown={markdown} assetsPath={assetsPath} />;\n};\n\nexport default PostContent;\n","import { PageContext } from \"@common/types\";\n\n/* Post */\nexport interface Post {\n  id: string;\n  excerpt?: string;\n  rawMarkdownBody: string;\n  fields: PostFields;\n  frontmatter: PostMetaData;\n}\n\n/* Post Page Context */\nexport interface PostPageContext {\n  previous?: Post;\n  next?: Post;\n  assetsPath?: string;\n}\n\n/* Post fields */\nexport interface PostFields {\n  slug: string;\n  date: string;\n}\n\n/* Post Metadata */\nexport interface PostMetaData extends PostTypeMetadata {\n  title: string;\n  author: PostMetaDataAuthor;\n  tags?: string[];\n}\n\nexport interface PostMetaDataAuthor {\n  name: string;\n  socialMedia?: {\n    github?: string;\n    twitter?: string;\n  };\n}\n\n/* Post types */\nexport type PostType = \"release\" | \"event\";\nexport const PostTypeRelease = \"release\";\nexport const PostTypeEvent = \"event\";\n\nexport interface PostTypeMetadata {\n  type?: PostType;\n  releaseTag?: string;\n}\n","import React from \"react\";\n\nimport Icon from \"@components/shared/Icon\";\n\nimport { FormattedMessage, getTranslation } from \"@common/i18n\";\n\nimport { PostFooterWrapper, PostTagsWrapper, PostTag } from \"./styled\";\n\ninterface PostFooterProps {\n  tags: string[];\n}\n\nconst gt = getTranslation(\"blog\");\n\nconst PostFooter: React.FunctionComponent<PostFooterProps> = ({\n  tags = [],\n}) => {\n  return (\n    <PostFooterWrapper>\n      <PostTagsWrapper>\n        <FormattedMessage id={gt(\"tags\")}>\n          {tags => (\n            <PostTag>\n              <Icon iconName=\"tags\" iconPrefix=\"fas\" />\n              {tags}:\n            </PostTag>\n          )}\n        </FormattedMessage>\n        {tags.map((tag: string) => (\n          <PostTag key={tag}>#{tag}</PostTag>\n        ))}\n      </PostTagsWrapper>\n    </PostFooterWrapper>\n  );\n};\n\nexport default PostFooter;\n","import React from \"react\";\n\nimport { FormattedMessage } from \"@common/i18n\";\n\nimport Link from \"@components/shared/Link\";\nimport Button from \"@components/shared/Button\";\n\nimport PostHeader from \"@components/blog/PostHeader\";\nimport PostContent from \"@components/blog/content/PostContent\";\nimport PostFooter from \"@components/blog/PostFooter\";\nimport PrevNextSection from \"@components/blog/PrevNextSection\";\n\nimport { PostPageContext, PostMetaData, PostFields } from \"./types\";\n\nimport { PostWrapper, PostContentWrapper } from \"./styled\";\n\ninterface PostProps extends PostPageContext {\n  metadata: PostMetaData;\n  fields: PostFields;\n  markdown: string;\n  readMore?: boolean;\n}\n\nconst Post: React.FunctionComponent<PostProps> = ({\n  metadata: { title, author, tags = [] },\n  metadata,\n  fields: { slug, date },\n  markdown,\n  assetsPath = \"\",\n  previous,\n  next,\n  readMore = false,\n}) => {\n  return (\n    <PostWrapper>\n      <PostHeader title={title} author={author} date={date} path={slug} />\n      <PostContentWrapper>\n        <PostContent\n          markdown={markdown}\n          metadata={metadata}\n          assetsPath={assetsPath}\n        />\n      </PostContentWrapper>\n      {readMore && (\n        <Link.Internal to={slug}>\n          <Button.Emphasized size=\"sm\">\n            <FormattedMessage id=\"blog.readMoreButton\" />\n          </Button.Emphasized>\n        </Link.Internal>\n      )}\n      <PostFooter tags={tags} />\n      {/* {!readMore && (\n        <PrevNextSection next={next} previous={previous} />\n      )} */}\n    </PostWrapper>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\n\nimport Grid from \"@styled/Grid\";\n\nimport Separator from \"@components/shared/Separator\";\n\nimport PostPage from \"@components/blog/Post\";\n\nimport { AllMarkdownRemarkNode } from \"@types\";\nimport { Post } from \"./types\";\n\nimport { BlogPageWrapper as Wrapper } from \"./styled\";\n\ntype AllMarkdownRemarkNodePost = AllMarkdownRemarkNode<Post>;\n\ninterface BlogPageProps {\n  nodes: AllMarkdownRemarkNodePost[];\n}\n\nexport const BlogPageWrapper: React.FunctionComponent = ({ children }) => {\n  return (\n    <Grid.Container>\n      <Grid.Row>\n        <Grid.Unit df={1} md={0} />\n        <Grid.Unit df={10} md={12}>\n          <Wrapper>{children}</Wrapper>\n        </Grid.Unit>\n        <Grid.Unit df={1} md={0} />\n      </Grid.Row>\n    </Grid.Container>\n  );\n};\n\nconst BlogPage: React.FunctionComponent<BlogPageProps> = ({ nodes }) => {\n  return (\n    <BlogPageWrapper>\n      {nodes.map((edge: AllMarkdownRemarkNodePost, index: number) => {\n        const post = edge.node;\n        return (\n          <PostPage\n            key={post.id}\n            metadata={post.frontmatter}\n            fields={post.fields}\n            markdown={post.excerpt || post.rawMarkdownBody}\n            readMore\n          />\n        );\n      })}\n    </BlogPageWrapper>\n  );\n};\n\nexport default BlogPage;\n"],"sourceRoot":""}