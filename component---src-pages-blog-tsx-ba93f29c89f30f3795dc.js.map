{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/blog/styled.ts","webpack:///./src/components/shared/ReactMarkdown/parseHTML/index.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Blockquote.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Break.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Code/theme.ts","webpack:///./src/components/shared/ReactMarkdown/components/Code/index.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Definition.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Delete.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Emphasis.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Heading.tsx","webpack:///./src/components/shared/ReactMarkdown/components/HTML.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Image.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ImageReference.tsx","webpack:///./src/components/shared/ReactMarkdown/components/EmbedVideo/helpers.ts","webpack:///./src/components/shared/ReactMarkdown/components/EmbedVideo/index.ts","webpack:///./src/components/shared/ReactMarkdown/components/InlineCode.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Link.tsx","webpack:///./src/components/shared/ReactMarkdown/components/LinkReference.tsx","webpack:///./src/components/shared/ReactMarkdown/components/List.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ListItem.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Paragraph.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ParsedHTML.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Root.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Strong.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Table.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableBody.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableCell.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableHead.tsx","webpack:///./src/components/shared/ReactMarkdown/components/TableRow.tsx","webpack:///./src/components/shared/ReactMarkdown/components/Text.tsx","webpack:///./src/components/shared/ReactMarkdown/components/ThematicBreak.tsx","webpack:///./src/components/shared/ReactMarkdown/components/VirtualHTML.tsx","webpack:///./src/components/shared/ReactMarkdown/index.tsx","webpack:///./src/components/blog/PostHeader.tsx","webpack:///./src/components/blog/content/templates/Default.tsx","webpack:///./src/components/blog/content/styled.ts","webpack:///./src/components/blog/content/templates/Release.tsx","webpack:///./src/components/blog/content/PostContent.tsx","webpack:///./src/components/blog/types.ts","webpack:///./src/components/blog/PostFooter.tsx","webpack:///./src/components/blog/Post.tsx","webpack:///./src/components/blog/BlogPage.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_blog_BlogPage__WEBPACK_IMPORTED_MODULE_2__","BlogIndex","_ref","_ref$data$allMarkdown","data","allMarkdownRemark","edges","locale","pageContext","nodes","filter","edge","node","fields","date","a","createElement","pageTitle","BlogPageWrapper","styled","div","withConfig","displayName","componentId","media","phone","_templateObject","PostWrapper","article","tablet","_templateObject2","PostHeaderWrapper","header","PostMetadata","p","PostContentWrapper","main","PostFooterWrapper","footer","PostTagsWrapper","ul","PostTag","li","h4","htmlParser","isValidNode","type","processingInstructions","StyledBlockQuote","blockquote","BlockQuote","children","react_default","Break","Fragment","theme","plain","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","HighlightWrapper","customScrollBar","thumbBorderRadius","trackBorderRadius","Code","language","value","es","Object","assign","defaultProps","code","_ref2","className","tokens","getLineProps","getTokenProps","map","line","i","key","token","Definition","Delete","Emphasis","Heading","level","_ref$headingPrefix","headingPrefix","newLevel","headingTokenized","tokenize","props","id","replace","shared_Link","Hash","to","chainIcon","H","as","data-scrollspy-node-type","HTML","StyledImage","img","Image","alt","src","_ref$assetsPath","assetsPath","renderedFileName","assetName","path","match","exec","splitedName","split","length","getAssetName","ImageReference","embedVideoHTML","options","videoId","_iterator","videoIdProcessors","_isArray","Array","isArray","_i","Symbol","iterator","next","done","processor","e","keys","TypeError","service","toLowerCase","readVideoId","videoService","getVideoService","url","iframeNode","width","height","noIframeBorder","additionalHTML","createIframe","videoUrl","embedUrl","URL","urlProcessing","toString","createUrl","message","EmbedVideo","videoOptions","defaultOptions","Math","round","ratio","overrideDefaultOptions","related","keywords","concat","knownPlatforms","join","re","RegExp","processValue","video","trim","includes","StyledInlineCode","InlineCode","inline","embedVideo","dangerouslySetInnerHTML","__html","Link","href","startsWith","External","externalIcon","underline","Internal","LinkReference","StyledOl","ol","StyledUl","List","start","ordered","tight","depth","ListItem","checked","index","Paragraph","shared_Paragraph","ParsedHTML","element","StyledRoot","Root","StyledStrong","strong","bold","Strong","StyledTable","table","Table","columnAlignment","StyledTableBody","tbody","TableBody","StyledTableHeaderCell","align","StyledTableCell","TableCell","_ref$isHeader","isHeader","_ref$align","StyledTableHead","thead","TableHead","StyledTableRow","tr","TableRow","Text","ThematicBreak","VirtualHTML","ReactMarkdown","source","_ref$escapeHtml","escapeHtml","_ref$renderedFileName","renderers","root","Components","text","break","paragraph","emphasis","thematicBreak","delete","link","Link_Link","image","Image_Image","linkReference","imageReference","tableHead","tableBody","tableRow","tableCell","list","listItem","definition","heading","Heading_Heading","inlineCode","html","virtualHtml","parsedHtml","react_markdown_default","astPlugins","parseHtml","gt","getTranslation","PostHeader","title","name","author","metadata","i18n","values","DefaultTemplatePost","markdown","ReleaseButtonsWrapper","ReleaseTemplatePost","releaseTag","config","links","KYMA_REPOSITORY_LINK","Button","Normal","iconName","iconPrefix","version","PostContent","Release","Default","PostFooter","_ref$tags","tags","Icon","tag","Post","_ref$metadata","_ref$metadata$tags","_ref$fields","slug","_ref$readMore","previous","readMore","blog_PostHeader","content_PostContent","Emphasized","size","blog_PostFooter","_styled_Grid__WEBPACK_IMPORTED_MODULE_1__","_components_blog_Post__WEBPACK_IMPORTED_MODULE_2__","_styled__WEBPACK_IMPORTED_MODULE_3__","Container","Row","Unit","df","md","BlogPage","post","frontmatter","excerpt","rawMarkdownBody"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KA0BaI,EAAS,WAePM,UA9BX,SAAAC,GAKE,IAAAC,EAAAD,EAJJE,KACEC,kBAAqBC,aAGnB,IAAAH,EAH2B,GAG3BA,EADWI,EACXL,EADJM,YAAeD,OAETE,EAAQH,EAAMI,OAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,OAAOC,OAEtD,OACEjB,EAAAkB,EAAAC,cAACjB,EAAA,EAAD,CAAQQ,OAAQA,EAAQU,UAAU,QAChCpB,EAAAkB,EAAAC,cAAChB,EAAA,EAAD,CAAUS,MAAOA,4iBClBhB,IAAMS,EAAkBC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,2BAGxBK,IAAMC,MAHkBC,MASfC,EAAcR,IAAOS,QAAVP,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,8GASpBK,IAAMK,OATcC,MAkBXC,EAAoBZ,IAAOa,OAAVX,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,oJAejBc,EAAed,IAAOe,EAAVb,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,0EAQZgB,EAAqBhB,IAAOiB,KAAVf,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,MAGlBkB,EAAoBlB,IAAOmB,OAAVjB,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,sBAIjBoB,EAAkBpB,IAAOqB,GAAVnB,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,sEAOfsB,EAAUtB,IAAOuB,GAAVrB,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,kKAkBkBA,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGJ,CAAH,+KAyBRA,IAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,uEAUGA,IAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,iBAAGJ,CAAH,0DASgBA,IAAOwB,GAAVtB,WAAA,CAAAC,YAAA,mCAAAC,YAAA,iBAAGJ,CAAH,kJC1HtByB,WAAW,CACxBC,YAHkB,SAACjC,GAAD,MAA6B,WAAdA,EAAKkC,MAItCC,uBAAwB,cCNpBC,EAAmB7B,IAAO8B,WAAV5B,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGJ,CAAH,iFAQT+B,EAAuD,SAAAhD,GAE9D,IADJiD,EACIjD,EADJiD,SAEA,OAAOC,EAAArC,EAAAC,cAACgC,EAAD,KAAmBG,ICVfE,EAA6C,SAAAnD,GAAkB,IAAfiD,EAAejD,EAAfiD,SAC3D,OAAOC,EAAArC,EAAAC,cAAAoC,EAAArC,EAAAuC,SAAA,KAAGH,sBCLGI,EAAA,CACbC,MAAO,CACLC,gBAAiB,qBACjBC,MAAO,oBAETC,OAAQ,CACN,CACEC,MAAO,CAAC,UACRC,MAAO,CACLH,MAAO,qBAGX,CACEE,MAAO,CAAC,UAAW,SAAU,UAAW,QAAS,eACjDC,MAAO,CACLH,MAAO,uBAGX,CACEE,MAAO,CAAC,aACRC,MAAO,CACLC,QAAS,KAGb,CACEF,MAAO,CAAC,MAAO,WAAY,UAC3BC,MAAO,CACLH,MAAO,YAGX,CACEE,MAAO,CAAC,WAAY,YACpBC,MAAO,CACLH,MAAO,YAGX,CACEE,MAAO,CAAC,SAAU,WAAY,aAC9BC,MAAO,CACLH,MAAO,YAGX,CACEE,MAAO,CAAC,aACRC,MAAO,CACLH,MAAO,YAGX,CACEE,MAAO,CAAC,OACRC,MAAO,CACLH,MAAO,qBAGX,CACEE,MAAO,CACL,UACA,SACA,MACA,aACA,UACA,UACA,YACA,OACA,YACA,QACA,WAEFC,MAAO,CACLH,MAAO,YAGX,CACEE,MAAO,CAAC,cAAe,YACvBC,MAAO,CACLH,MAAO,YAGX,CACEE,MAAO,CAAC,WACRC,MAAO,CACLE,mBAAoB,iBAGxB,CACEH,MAAO,CAAC,YACRC,MAAO,CACLE,mBAAoB,cAGxB,CACEH,MAAO,CAAC,UACRC,MAAO,CACLG,UAAW,WAGf,CACEJ,MAAO,CAAC,YAAa,QACrBC,MAAO,CACLI,WAAY,SAGhB,CACEL,MAAO,CAAC,aACRC,MAAO,CACLH,MAAO,cChGTQ,EAAmB/C,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,ocAYlBgD,YAAgB,CAChBC,kBAAmB,cACnBC,kBAAmB,iBAwBVC,EAA2C,SAAApE,GAIlD,IAHJqE,EAGIrE,EAHJqE,SACAC,EAEItE,EAFJsE,MACArB,EACIjD,EADJiD,SAEA,OACEC,EAAArC,EAAAC,cAACkD,EAAD,KACEd,EAAArC,EAAAC,cAACyD,EAAA,EAADC,OAAAC,OAAA,GACMC,IADN,CAEEC,KAAM1B,GAAsBqB,EAC5BjB,MAAOA,EACPgB,SAAUA,GAAsB,SAE/B,SAAAO,GAAA,IAAGC,EAAHD,EAAGC,UAAWlB,EAAdiB,EAAcjB,MAAOmB,EAArBF,EAAqBE,OAAQC,EAA7BH,EAA6BG,aAAcC,EAA3CJ,EAA2CI,cAA3C,OACC9B,EAAArC,EAAAC,cAAA,OAAK+D,UAAWA,EAAWlB,MAAOA,GAChCT,EAAArC,EAAAC,cAAA,YACGgE,EAAOG,IAAI,SAACC,EAAWC,GAAZ,OACVjC,EAAArC,EAAAC,cAAA,MAASiE,EAAa,CAAEG,OAAME,IAAKD,IAChCD,EAAKD,IAAI,SAACI,EAAYD,GAAb,OACRlC,EAAArC,EAAAC,cAAA,OAAUkE,EAAc,CAAEK,QAAOD,oBC9DxCE,EAAuD,SAAAtF,GAE9D,IADJiD,EACIjD,EADJiD,SAEA,OAAOC,EAAArC,EAAAC,cAAAoC,EAAArC,EAAAuC,SAAA,KAAGH,ICHCsC,EAA+C,SAAAvF,GAAkB,IAAfiD,EAAejD,EAAfiD,SAC7D,OAAOC,EAAArC,EAAAC,cAAAoC,EAAArC,EAAAuC,SAAA,KAAGH,ICDCuC,EAAmD,SAAAxF,GAE1D,IADJiD,EACIjD,EADJiD,SAEA,OAAOC,EAAArC,EAAAC,cAAAoC,EAAArC,EAAAuC,SAAA,KAAGH,uCCKCwC,EAAiD,SAAAzF,GAIxD,IAHJ0F,EAGI1F,EAHJ0F,MAGIC,EAAA3F,EAFJ4F,qBAEI,IAAAD,EAFY,GAEZA,EADJ1C,EACIjD,EADJiD,SAEM4C,EAAWH,EAAQ,GAAK,EAAI,EAAIA,EAAQ,EACxCI,EAAmBC,YAAU9C,EAAmB,GAAG+C,MACtD1B,OAEG2B,GAAML,EACLA,EADkB,IACDE,EACpBA,GACFI,QAAQ,gBAAiB,KAE3B,OACEhD,EAAArC,EAAAC,cAACqF,EAAA,EAAKC,KAAN,CAAWC,GAAIJ,EAAIK,WAAS,GAC1BpD,EAAArC,EAAAC,cAACyF,EAAA,EAAD,CAAGC,GAAE,IAAMX,EAAYI,GAAIA,EAAIQ,2BAAyB,UACrDxD,KCzBIyD,EAA2C,WACtD,OAAO,MCFHC,SAAc1F,IAAO2F,IAAVzF,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,uCAYJ4F,EAA6C,SAAA7G,GAKpD,IAJJ8G,EAII9G,EAJJ8G,IACAC,EAGI/G,EAHJ+G,IAGIC,EAAAhH,EAFJiH,kBAEI,IAAAD,EAFS,GAETA,EAAAhH,EADJkH,iBAaA,IAAKD,EAAY,OAAO,KAExB,IAAME,EAbe,SAACC,GACpB,IACMC,EADgB,uCACMC,KAAKF,GAEjC,GAAIC,GAASA,EAAM,GAAI,CACrB,IAAME,EAAcF,EAAM,GAAGG,MAAM,KACnC,OAAUD,EAAYA,EAAYE,OAAS,GAA3C,IAAiDJ,EAAM,GAEzD,MAAO,GAKSK,CAAaX,GAC/B,OAAKI,EAEEjE,EAAArC,EAAAC,cAAC6F,EAAD,CAAaI,IAAG,GAAKE,EAAaE,EAAaL,IAAKA,IAFpC,MC/BZa,EAET,WACF,OAAO,kFCKF,SAASC,EACdhF,EACAqD,EACA4B,GAEA,IACE,IAAMC,EAWV,SAAqBlF,EAAcqD,GAEjC,IADA,IAAI6B,EACJC,EAAsBC,oBAAtBC,EAAAC,MAAAC,QAAAJ,GAAAK,EAAA,EAAAL,EAAAE,EAAAF,IAAAM,OAAAC,cAAyC,KAAAtI,EAAA,GAAAiI,EAAA,IAAAG,GAAAL,EAAAN,OAAA,MAAAzH,EAAA+H,EAAAK,SAAA,KAAAA,EAAAL,EAAAQ,QAAAC,KAAA,MAAAxI,EAAAoI,EAAA9D,MAAA,IAAhCmE,EAAgCzI,EACvC,IACE8H,EAAUW,EAAUxC,GACpB,MAAOyC,GACPZ,EAAU,GAGZ,GAAoC,IAAhCtD,OAAOmE,KAAKb,GAASL,OACvB,OAAOK,EAIX,GAAa,UAATlF,EACF,MAAM,IAAIgG,UAAU,6BAGtB,MAAO,CACL3C,GAAIA,EACJ4C,QAASjG,EAAKkG,eA/BYC,CAAYnG,EAAMqD,GAEtC+C,EAAeC,0BAAgBnB,EAAQe,SAG7C,OA6CJ,SACEK,EACAF,EACAnB,GAEA,IAAIsB,EAAU,4FAGOtB,EAAQuB,MAHf,6BAIQvB,EAAQwB,OAJhB,0BAKKH,EALL,qHAUVrB,EAAQyB,iBACVH,GAAU,iGAQRH,EAAaO,iBACfJ,GAAcH,EAAaO,gBAG7B,OAAOJ,EA1EQK,CA+BjB,SACE1B,EACAkB,EACAnB,GAEA,IAAM4B,EAAWT,EAAaU,SAAS5B,GACnCoB,EAAM,IAAIS,IAAIF,GAEdT,EAAaY,gBACfV,EAAMF,EAAaY,cAAc9B,EAASoB,EAAKrB,IAGjD,OAAOqB,EAAIW,WA5CGC,CAAUhC,EAAQ7B,GAAI+C,EAAcnB,GACjBmB,EAAcnB,GAE7C,MAAOa,GACP,sCAAuCA,EAAEqB,QAAzC,QCjBJ,IAceC,EAAA,SAAC1F,GACd,IAAMuD,EAfuB,SAC7BA,GAEA,IAAMoC,EAAepC,EAAOrD,OAAAC,OAAA,GACnByF,iBAAmBrC,GADArD,OAAAC,OAAA,GAEnByF,kBAMT,OAJKD,EAAaZ,SAChBY,EAAaZ,OAASc,KAAKC,MAAMH,EAAab,MAAQa,EAAaI,QAG9DJ,EAISK,CAAuB,CACrClB,MAAO,IACPiB,MAAO,KACPE,SAAS,EACTjB,gBAAgB,IAGZkB,EAAW,GAAAC,OAAIC,2BAAJ,CAAsB,UAASC,KAAK,KAC/CC,EAAK,IAAIC,OAAJ,IAAgBL,EAAhB,SAAuC,KAE5CM,EAAexG,EAAM+C,MAAMuD,GACjC,GAAIE,EAAc,CAChB,IAGMC,EAAQnD,EAHDkD,EAAa,GACfA,EAAa,GAAGE,OAEYnD,GAEvC,OAAIkD,EAAME,SAAS,SAAiB,KAC7BF,EAET,OAAO,MCtCHG,EAAmBjK,IAAO0D,KAAVxD,WAAA,CAAAC,YAAA,+BAAAC,YAAA,YAAGJ,CAAH,wLAeTkK,EAAuD,SAAAnL,GAI9DA,EAHJoL,OAGI,IAFJ9G,EAEItE,EAFJsE,MACArB,EACIjD,EADJiD,SAEI8H,EAAQ,KAGZ,OAFIzG,IAAOyG,EAAQM,EAAW/G,IAEvByG,EACL7H,EAAArC,EAAAC,cAAA,OAAKwK,wBAAyB,CAAEC,OAAQR,KAExC7H,EAAArC,EAAAC,cAACoK,EAAD,KAAmBjI,IAAaqB,EAAQA,EAAQrB,ICtBvCuI,UAA2C,SAAAxL,GAIlD,IAHJyL,EAGIzL,EAHJyL,KAGIzE,EAAAhH,EAFJiH,kBAEI,IAAAD,EAFS,GAETA,EADJ/D,EACIjD,EADJiD,SAaA,GAAIwI,EAAKC,WAAW,QAClB,OACExI,EAAArC,EAAAC,cAACqF,EAAA,EAAEwF,SAAH,CAAYtF,GAAIoF,EAAMG,cAAY,EAACC,WAAS,GACzC5I,GAIP,GAAIwI,EAAKC,WAAW,KAClB,OACExI,EAAArC,EAAAC,cAACqF,EAAA,EAAEC,KAAH,CAAQC,GAAIoF,EAAMI,WAAS,GACxB5I,GAKP,IAAMkE,EA1Be,SAACC,GACpB,IACMC,EADgB,qDACMC,KAAKF,GAEjC,GAAIC,GAASA,EAAM,GAAI,CACrB,IAAME,EAAcF,EAAM,GAAGG,MAAM,KACnC,OAAUD,EAAYA,EAAYE,OAAS,GAA3C,IAAiDJ,EAAM,GAEzD,MAAO,GAkBSK,CAAa+D,GAC/B,OAAItE,EACKjE,EAAArC,EAAAC,cAAA,KAAG2K,KAAI,GAAKxE,EAAaE,GAAclE,GAG9CC,EAAArC,EAAAC,cAACqF,EAAA,EAAE2F,SAAH,CAAYzF,GAAIoF,EAAMI,WAAS,GAC5B5I,KC1CM8I,EAET,WACF,OAAO,MCJHC,EAAW/K,IAAOgL,GAAV9K,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,+CAKRiL,EAAWjL,IAAOqB,GAAVnB,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,4CAYDkL,EAA2C,SAAAnM,GAMlD,IALJoM,EAKIpM,EALJoM,MACAC,EAIIrM,EAJJqM,QAGApJ,GACIjD,EAHJsM,MAGItM,EAFJuM,MAEIvM,EADJiD,UAEA,OAAIoJ,EACKnJ,EAAArC,EAAAC,cAACkL,EAAD,CAAUI,MAAOA,GAAQnJ,GAE3BC,EAAArC,EAAAC,cAACoL,EAAD,KAAWjJ,ICrBPuJ,EAAmD,SAAAxM,GAM1DA,EALJyM,QAKIzM,EAJJsM,MAIItM,EAHJqM,QAGI,IAFJK,EAEI1M,EAFJ0M,MACAzJ,EACIjD,EADJiD,SAEA,OAAOC,EAAArC,EAAAC,cAAA,MAAIsE,IAAKsH,GAAQzJ,aCVb0J,EAAqD,SAAA3M,GAE5D,IADJiD,EACIjD,EADJiD,SAEA,OAAOC,EAAArC,EAAAC,cAAC8L,EAAA,EAAD,KAAI3J,ICHA4J,EAAuD,SAAA7M,GAE9D,IADJ8M,EACI9M,EADJ8M,QAEA,OAAO5J,EAAArC,EAAAC,cAAAoC,EAAArC,EAAAuC,SAAA,KAAG0J,ICNNC,EAAa9L,IAAOC,IAAVC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAGJ,CAAH,gJAKH+L,EAAgC,SAAAhN,GAAkB,IAAfiD,EAAejD,EAAfiD,SAC9C,OAAOC,EAAArC,EAAAC,cAACiM,EAAD,KAAa9J,ICNhBgK,UAAehM,IAAOiM,OAAV/L,WAAA,CAAAC,YAAA,uBAAAC,YAAA,YAAGJ,CAAH,qBACD,SAAA+E,GAAK,OAAIA,EAAM3C,MAAMU,WAAWoJ,QAKpCC,EAA+C,SAAApN,GAAkB,IAAfiD,EAAejD,EAAfiD,SAC7D,OAAOC,EAAArC,EAAAC,cAACmM,EAAD,KAAehK,ICLlBoK,EAAcpM,IAAOqM,MAAVnM,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,6CAUJsM,EAA6C,SAAAvN,GAGpDA,EAFJwN,gBAEI,IADJvK,EACIjD,EADJiD,SAEA,OAAOC,EAAArC,EAAAC,cAACuM,EAAD,KAAcpK,ICdjBwK,EAAkBxM,IAAOyM,MAAVvM,WAAA,CAAAC,YAAA,6BAAAC,YAAA,YAAGJ,CAAH,MAMR0M,EAAqD,SAAA3N,GAG5DA,EAFJwN,gBAEI,IADJvK,EACIjD,EADJiD,SAEA,OAAOC,EAAArC,EAAAC,cAAC2M,EAAD,KAAkBxK,ICNrB2K,EAAwB3M,YAAO,MAAVE,WAAA,CAAAC,YAAA,mCAAAC,YAAA,gBAAGJ,CAAH,kLACX,SAAA+E,GAAK,OAAIA,EAAM6H,QAezBC,EAAkB7M,YAAO,MAAVE,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,kLACL,SAAA+E,GAAK,OAAIA,EAAM6H,QAoBlBE,EAAqD,SAAA/N,GAI5D,IAAAgO,EAAAhO,EAHJiO,gBAGI,IAAAD,KAAAE,EAAAlO,EAFJ6N,aAEI,IAAAK,EAFI,OAEJA,EADJjL,EACIjD,EADJiD,SAEA,OAAOgL,EACL/K,EAAArC,EAAAC,cAAC8M,EAAD,CAAuBC,MAAOA,GAAQ5K,GAEtCC,EAAArC,EAAAC,cAACgN,EAAD,CAAiBD,MAAOA,GAAQ5K,ICjD9BkL,GAAkBlN,IAAOmN,MAAVjN,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAGJ,CAAH,MAMRoN,GAAqD,SAAArO,GAG5DA,EAFJwN,gBAEI,IADJvK,EACIjD,EADJiD,SAEA,OAAOC,EAAArC,EAAAC,cAACqN,GAAD,KAAkBlL,ICVrBqL,GAAiBrN,IAAOsN,GAAVpN,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAGJ,CAAH,yDAWPuN,GAAmD,SAAAxO,GAI1DA,EAHJiO,SAGIjO,EAFJwN,gBAEI,IADJvK,EACIjD,EADJiD,SAEA,OAAOC,EAAArC,EAAAC,cAACwN,GAAD,KAAiBrL,ICjBbwL,GAA2C,SAAAzO,GAAkB,IAAfiD,EAAejD,EAAfiD,SACzD,OAAOC,EAAArC,EAAAC,cAAAoC,EAAArC,EAAAuC,SAAA,KAAGH,ICDCyL,GAA6D,SAAA1O,GAEpE,IADJiD,EACIjD,EADJiD,SAEA,OAAOC,EAAArC,EAAAC,cAAAoC,EAAArC,EAAAuC,SAAA,KAAGH,ICHC0L,GAAyD,WACpE,OAAO,MCqEMC,IAzDX,SAAA5O,GAME,IALJ6O,EAKI7O,EALJ6O,OAKIC,EAAA9O,EAJJ+O,kBAII,IAAAD,KAAAnJ,EAAA3F,EAHJ4F,qBAGI,IAAAD,EAHY,GAGZA,EAAAqB,EAAAhH,EAFJiH,kBAEI,IAAAD,EAFS,GAETA,EAAAgI,EAAAhP,EADJkH,wBACI,IAAA8H,EADe,GACfA,EACEC,EAAuB,CAC3BC,KAAMC,EACNC,KAAMD,GACNE,MAAOF,EACPG,UAAWH,EACXI,SAAUJ,EACVjC,OAAQiC,EACRK,cAAeL,GACfpM,WAAYoM,EACZM,OAAQN,EACRO,KAAM,SAAC1J,GAAD,OACJ9C,EAAArC,EAAAC,cAAC6O,EAADnL,OAAAC,OAAA,GAAqBuB,EAArB,CAA4BiB,WAAYA,MAE1C2I,MAAO,SAAC5J,GAAD,OACL9C,EAAArC,EAAAC,cAAC+O,EAADrL,OAAAC,OAAA,GACMuB,EADN,CAEEiB,WAAYA,EACZC,iBAAkBA,MAGtB4I,cAAeX,EACfY,eAAgBZ,EAChB7B,MAAO6B,EACPa,UAAWb,GACXc,UAAWd,EACXe,SAAUf,GACVgB,UAAWhB,EACXiB,KAAMjB,EACNkB,SAAUlB,EACVmB,WAAYnB,EACZoB,QAAS,SAACvK,GAAD,OACP9C,EAAArC,EAAAC,cAAC0P,EAADhM,OAAAC,OAAA,GAAwBuB,EAAxB,CAA+BJ,cAAeA,MAEhD6K,WAAYtB,EACZxK,KAAMwK,EACNuB,KAAMvB,EACNwB,YAAaxB,GACbyB,WAAYzB,GAGd,OACEjM,EAAArC,EAAAC,cAAC+P,EAAAhQ,EAAD,CACEgO,OAAQA,EACRE,WAAYA,EACZE,UAAWA,EACX6B,WAAY,CAACC,kHCnDbC,EAAKC,yBAAe,QA4BXC,EA1B8C,SAAAlR,GAKvD,IAJJmR,EAIInR,EAJJmR,MACUC,EAGNpR,EAHJqR,OAAUD,KACVxQ,EAEIZ,EAFJY,KACAwG,EACIpH,EADJoH,KAEMkK,EACJpO,EAAArC,EAAAC,cAACyQ,EAAA,iBAAD,CACEtL,GAAI+K,EAAG,gBACPQ,OAAQ,CACNH,OAAQD,EACRxQ,KAAMA,KAKZ,OACEsC,EAAArC,EAAAC,cAACG,EAAA,EAAD,KACEiC,EAAArC,EAAAC,cAAC0K,EAAA,EAAKM,SAAN,CAAezF,GAAIe,GACjBlE,EAAArC,EAAAC,cAACyF,EAAA,EAAD,CAAGC,GAAG,MAAM2K,IAEdjO,EAAArC,EAAAC,cAACG,EAAA,EAAD,KAAeqQ,cCpBNG,EAVX,SAAAzR,GAA8B,IAA3B0R,EAA2B1R,EAA3B0R,SAAUzK,EAAiBjH,EAAjBiH,WACf,OACE/D,EAAArC,EAAAC,cAAC8N,EAAA,EAAD,CACEC,OAAQ6C,EACR3C,YAAY,EACZ9H,WAAYA,cCbL0K,SAAwB1Q,EAAOC,IAAVC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAGJ,CAAH,6DC2CnB2Q,EA1BX,SAAA5R,GAAA,IAAG0R,EAAH1R,EAAG0R,SAAUzK,EAAbjH,EAAaiH,WAAY4K,EAAzB7R,EAAyB6R,WAAzB,OACF3O,EAAArC,EAAAC,cAAAoC,EAAArC,EAAAuC,SAAA,KACGyO,GACC3O,EAAArC,EAAAC,cAAC6Q,EAAD,KACEzO,EAAArC,EAAAC,cAAC0K,EAAA,EAAKG,SAAN,CACEtF,GAAOyL,EAAOC,MAAMC,qBAAlB,aAAmDH,GAErD3O,EAAArC,EAAAC,cAACmR,EAAA,EAAOC,OAAR,CAAeC,SAAS,qBAAqBC,WAAW,OACtDlP,EAAArC,EAAAC,cAACyQ,EAAA,iBAAD,CACEtL,GAAG,sBACHuL,OAAQ,CACNa,QAASR,QAOrB3O,EAAArC,EAAAC,cAAC8N,EAAA,EAAD,CACEC,OAAQ6C,EACR3C,YAAY,EACZ9H,WAAYA,MCHHqL,EAnBgD,SAAAtS,GAIzD,IAHJ0R,EAGI1R,EAHJ0R,SAGI1K,EAAAhH,EAFJiH,kBAEI,IAAAD,EAFS,GAETA,EADJsK,EACItR,EADJsR,SAEA,OAAIA,EAAS1O,MCiBgB,YDhBvB0O,EAAS1O,KAETM,EAAArC,EAAAC,cAACyR,EAAD,CACEb,SAAUA,EACVG,WAAYP,EAASO,WACrB5K,WAAYA,IAKb/D,EAAArC,EAAAC,cAAC0R,EAAD,CAAiBd,SAAUA,EAAUzK,WAAYA,cEvBpD+J,EAAKC,yBAAe,QAwBXwB,EAtB8C,SAAAzS,GAEvD,IAAA0S,EAAA1S,EADJ2S,YACI,IAAAD,EADG,GACHA,EACJ,OACExP,EAAArC,EAAAC,cAACG,EAAA,EAAD,KACEiC,EAAArC,EAAAC,cAACG,EAAA,EAAD,KACEiC,EAAArC,EAAAC,cAACyQ,EAAA,iBAAD,CAAkBtL,GAAI+K,EAAG,SACtB,SAAA2B,GAAI,OACHzP,EAAArC,EAAAC,cAACG,EAAA,EAAD,KACEiC,EAAArC,EAAAC,cAAC8R,EAAA,EAAD,CAAMT,SAAS,OAAOC,WAAW,QAChCO,EAFH,OAMHA,EAAK1N,IAAI,SAAC4N,GAAD,OACR3P,EAAArC,EAAAC,cAACG,EAAA,EAAD,CAASmE,IAAKyN,GAAd,IAAqBA,QC6BhBC,IAnCkC,SAAA9S,GAS3C,IAAA+S,EAAA/S,EARJsR,SAAYH,EAQR4B,EARQ5B,MAAOE,EAQf0B,EARe1B,OAQf2B,EAAAD,EARuBJ,YAQvB,IAAAK,EAR8B,GAQ9BA,EAPJ1B,EAOItR,EAPJsR,SAOI2B,EAAAjT,EANJW,OAAUuS,EAMND,EANMC,KAAMtS,EAMZqS,EANYrS,KAChB8Q,EAKI1R,EALJ0R,SAKI1K,EAAAhH,EAJJiH,kBAII,IAAAD,EAJS,GAITA,EAAAmM,GAAAnT,EAHJoT,SAGIpT,EAFJuI,KAEIvI,EADJqT,iBACI,IAAAF,KACJ,OACEjQ,EAAArC,EAAAC,cAACG,EAAA,EAAD,KACEiC,EAAArC,EAAAC,cAACwS,EAAD,CAAYnC,MAAOA,EAAOE,OAAQA,EAAQzQ,KAAMA,EAAMwG,KAAM8L,IAC5DhQ,EAAArC,EAAAC,cAACG,EAAA,EAAD,KACEiC,EAAArC,EAAAC,cAACyS,EAAD,CACE7B,SAAUA,EACVJ,SAAUA,EACVrK,WAAYA,KAGfoM,GACCnQ,EAAArC,EAAAC,cAAC0K,EAAA,EAAKM,SAAN,CAAezF,GAAI6M,GACjBhQ,EAAArC,EAAAC,cAACmR,EAAA,EAAOuB,WAAR,CAAmBC,KAAK,MACtBvQ,EAAArC,EAAAC,cAACyQ,EAAA,iBAAD,CAAkBtL,GAAG,0BAI3B/C,EAAArC,EAAAC,cAAC4S,EAAD,CAAYf,KAAMA,wCClDxBtT,EAAAG,EAAAD,EAAA,sBAAAyB,IAAA,IAAAtB,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAiU,EAAAtU,EAAA,KAAAuU,EAAAvU,EAAA,KAAAwU,EAAAxU,EAAA,KAmBa2B,EAA2C,SAAAhB,GAAkB,IAAfiD,EAAejD,EAAfiD,SACzD,OACEtD,EAAAkB,EAAAC,cAAC6S,EAAA,EAAKG,UAAN,KACEnU,EAAAkB,EAAAC,cAAC6S,EAAA,EAAKI,IAAN,KACEpU,EAAAkB,EAAAC,cAAC6S,EAAA,EAAKK,KAAN,CAAWC,GAAI,EAAGC,GAAI,IACtBvU,EAAAkB,EAAAC,cAAC6S,EAAA,EAAKK,KAAN,CAAWC,GAAI,GAAIC,GAAI,IACrBvU,EAAAkB,EAAAC,cAAC+S,EAAA,EAAD,KAAU5Q,IAEZtD,EAAAkB,EAAAC,cAAC6S,EAAA,EAAKK,KAAN,CAAWC,GAAI,EAAGC,GAAI,OAyBfC,IAnB0C,SAAAvP,GAAe,IAAZrE,EAAYqE,EAAZrE,MAC1D,OACEZ,EAAAkB,EAAAC,cAACE,EAAD,KACGT,EAAM0E,IAAI,SAACxE,EAAiCiM,GAC3C,IAAM0H,EAAO3T,EAAKC,KAClB,OACEf,EAAAkB,EAAAC,cAAC8S,EAAA,EAAD,CACExO,IAAKgP,EAAKnO,GACVqL,SAAU8C,EAAKC,YACf1T,OAAQyT,EAAKzT,OACb+Q,SAAU0C,EAAKE,SAAWF,EAAKG,gBAC/BlB,UAAQ","file":"component---src-pages-blog-tsx-ba93f29c89f30f3795dc.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { AllMarkdownRemark, PageContext, IntlPageContext } from \"@types\";\nimport { Post, PostPageContext } from \"@components/blog/types\";\n\nimport Layout from \"@components/layout/Layout\";\nimport BlogPage from \"@components/blog/BlogPage\";\n\nconst BlogIndex: React.FunctionComponent<\n  AllMarkdownRemark<Post> & PageContext<IntlPageContext>\n> = ({\n  data: {\n    allMarkdownRemark: { edges = [] },\n  },\n  pageContext: { locale },\n}) => {\n  const nodes = edges.filter(edge => !!edge.node.fields.date);\n\n  return (\n    <Layout locale={locale} pageTitle=\"Blog\">\n      <BlogPage nodes={nodes} />\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n    ) {\n      edges {\n        node {\n          ...BlogPost\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogIndex;\n","import styled, { media } from \"@styled\";\n\n/* BlogPage */\nexport const BlogPageWrapper = styled.div`\n  margin: 75px 0 0 0;\n\n  ${media.phone`\n    margin-top: 25px;\n  `};\n`;\n\n/* Post */\nexport const PostWrapper = styled.article`\n  margin-bottom: 20px;\n  padding: 40px 0px;\n  border-bottom: 1px solid #e5e5e5;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  ${media.tablet`\n    &:last-child {\n      padding-bottom: 0;\n    }\n    margin-bottom: 0;\n  `};\n`;\n\n/* Post Header */\nexport const PostHeaderWrapper = styled.header`\n  margin: 0 0 50px 0;\n\n  h2 {\n    font-size: 36px;\n    margin-bottom: 16px;\n    color: rgb(72, 87, 102);\n    transition: color 0.2s ease-in-out;\n\n    &:hover {\n      color: rgb(11, 116, 222);\n    }\n  }\n`;\n\nexport const PostMetadata = styled.p`\n  margin-bottom: 0;\n  display: inline-block;\n  text-align: left;\n  font-size: 18px;\n`;\n\n/* Post Content */\nexport const PostContentWrapper = styled.main``;\n\n/* Post Footer */\nexport const PostFooterWrapper = styled.footer`\n  margin-top: 30px;\n`;\n\nexport const PostTagsWrapper = styled.ul`\n  list-style-type: none;\n  display: inline-block;\n  margin: 0;\n  margin-top: 0;\n`;\n\nexport const PostTag = styled.li`\n  display: inline-block;\n  margin-bottom: 15px;\n  margin-left: 15px;\n  font-size: 14px;\n\n  &:first-child {\n    margin-left: 0;\n    font-weight: 600;\n    font-size: 16px;\n\n    > svg {\n      margin-right: 6px;\n    }\n  }\n`;\n\n/* PrevNextSectionWrapper */\nexport const PrevNextSectionWrapper = styled.div`\n  margin-top: 75px;\n\n  a {\n    display: inline-block;\n\n    &:hover {\n      h4 {\n        color: rgb(11, 116, 222);\n      }\n    }\n  }\n\n  span {\n    font-size: 18px;\n    color: rgb(72, 87, 102);\n  }\n\n  svg {\n    position: absolute;\n    color: rgb(72, 87, 102);\n    top: 7px;\n  }\n`;\n\nexport const PrevWrapper = styled.div`\n  position: relative;\n  text-align: left;\n  min-width: 100%;\n\n  svg {\n    left: -18px;\n  }\n`;\n\nexport const NextWrapper = styled.div`\n  position: relative;\n  text-align: right;\n\n  svg {\n    right: -18px;\n  }\n`;\n\nexport const PrevNextSectionPostTitle = styled.h4`\n  transition: all 0.2s ease-in-out;\n  color: rgb(72, 87, 102);\n`;\n","// @ts-ignore\nimport htmlParser from \"react-markdown/plugins/html-parser\";\n\nimport tabs from \"./Tabs\";\n\nconst isValidNode = (node: any) => node.type !== \"script\";\n\nexport default htmlParser({\n  isValidNode: isValidNode,\n  processingInstructions: [\n    // Tabs processing\n    // tabs,\n  ],\n});\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledBlockQuote = styled.blockquote`\n  margin-left: 0;\n  padding-left: 1.6rem;\n  border-left: 3px solid rgba(27, 31, 35, 0.2);\n`;\n\ninterface BlockQuoteProps {}\n\nexport const BlockQuote: React.FunctionComponent<BlockQuoteProps> = ({\n  children,\n}) => {\n  return <StyledBlockQuote>{children}</StyledBlockQuote>;\n};\n","import React from \"react\";\n\ninterface BreakProps {}\n\nexport const Break: React.FunctionComponent<BreakProps> = ({ children }) => {\n  return <>{children}</>;\n};\n","export default {\n  plain: {\n    backgroundColor: \"rgb(250, 250, 250)\",\n    color: \"rgb(80, 161, 79)\",\n  },\n  styles: [\n    {\n      types: [\"string\"],\n      style: {\n        color: \"rgb(80, 161, 79)\",\n      },\n    },\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n      style: {\n        color: \"rgb(160, 161, 167)\",\n      },\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7,\n      },\n    },\n    {\n      types: [\"tag\", \"operator\", \"number\"],\n      style: {\n        color: \"#063289\",\n      },\n    },\n    {\n      types: [\"property\", \"function\"],\n      style: {\n        color: \"#b29762\",\n      },\n    },\n    {\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\n      style: {\n        color: \"#2d2006\",\n      },\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#896724\",\n      },\n    },\n    {\n      types: [\"key\"],\n      style: {\n        color: \"rgb(152, 104, 1)\",\n      },\n    },\n    {\n      types: [\n        \"boolean\",\n        \"entity\",\n        \"url\",\n        \"attr-value\",\n        \"keyword\",\n        \"control\",\n        \"directive\",\n        \"unit\",\n        \"statement\",\n        \"regex\",\n        \"at-rule\",\n      ],\n      style: {\n        color: \"#728fcb\",\n      },\n    },\n    {\n      types: [\"placeholder\", \"variable\"],\n      style: {\n        color: \"#93abdc\",\n      },\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\",\n      },\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\",\n      },\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\",\n      },\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"#896724\",\n      },\n    },\n  ],\n};\n","import React from \"react\";\nimport styled from \"@styled\";\nimport { customScrollBar } from \"@styled/mixins\";\n\n// @ts-ignore\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\n// @ts-ignore\nimport theme from \"./theme\";\n\nconst HighlightWrapper = styled.div`\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier,\n    monospace !important;\n  background: rgb(250, 250, 250);\n  border: 1px solid rgb(229, 229, 229);\n  border-radius: 5px;\n  margin: 0 0 16px 0;\n  padding-bottom: 16px;\n  white-space: nowrap;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n\n  ${customScrollBar({\n    thumbBorderRadius: \"0 0 4px 4px\",\n    trackBorderRadius: \"0 0 4px 4px\",\n  })}\n\n  > pre {\n    padding: 16px 16px 0 16px;\n    margin-bottom: 0 !important;\n\n    > code {\n      word-break: normal;\n      white-space: pre;\n      overflow-wrap: normal;\n\n      > div span:last-child {\n        padding-right: 16px;\n      }\n    }\n  }\n`;\n\ninterface CodeProps {\n  language: string;\n  value: string;\n}\n\nexport const Code: React.FunctionComponent<CodeProps> = ({\n  language,\n  value,\n  children,\n}) => {\n  return (\n    <HighlightWrapper>\n      <Highlight\n        {...defaultProps}\n        code={children ? children : value}\n        theme={theme}\n        language={language ? language : \"yaml\"}\n      >\n        {({ className, style, tokens, getLineProps, getTokenProps }: any) => (\n          <pre className={className} style={style}>\n            <code>\n              {tokens.map((line: any, i: number) => (\n                <div {...getLineProps({ line, key: i })}>\n                  {line.map((token: any, key: number) => (\n                    <span {...getTokenProps({ token, key })} />\n                  ))}\n                </div>\n              ))}\n            </code>\n          </pre>\n        )}\n      </Highlight>\n    </HighlightWrapper>\n  );\n};\n","import React from \"react\";\n\ninterface DefinitionProps {}\n\nexport const Definition: React.FunctionComponent<DefinitionProps> = ({\n  children,\n}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\ninterface DeleteProps {}\n\nexport const Delete: React.FunctionComponent<DeleteProps> = ({ children }) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\ninterface EmphasisProps {}\n\nexport const Emphasis: React.FunctionComponent<EmphasisProps> = ({\n  children,\n}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nimport H from \"@components/shared/H\";\nimport Link from \"@components/shared/Link\";\n\nimport { tokenize } from \"@common/utils\";\n\ninterface HeadingProps {\n  level: 1 | 2 | 3 | 4 | 5 | 6;\n  headingPrefix?: string;\n}\n\nexport const Heading: React.FunctionComponent<HeadingProps> = ({\n  level,\n  headingPrefix = \"\",\n  children,\n}) => {\n  const newLevel = level + 2 >= 6 ? 6 : level + 2;\n  const headingTokenized = tokenize((children as any[])[0].props\n    .value as string);\n\n  const id = (headingPrefix\n    ? `${headingPrefix}-${headingTokenized}`\n    : headingTokenized\n  ).replace(/[^a-zA-Z0-9]/g, \"-\");\n\n  return (\n    <Link.Hash to={id} chainIcon>\n      <H as={`h${newLevel}`} id={id} data-scrollspy-node-type=\"header\">\n        {children}\n      </H>\n    </Link.Hash>\n  );\n};\n","import React from \"react\";\n\ninterface HTMLProps {}\n\nexport const HTML: React.FunctionComponent<HTMLProps> = () => {\n  return null;\n};\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledImage = styled.img`\n  margin: 16px 0;\n  border-radius: 3px;\n`;\n\ninterface ImageProps {\n  alt: string;\n  src: string;\n  assetsPath?: string;\n  renderedFileName?: string;\n}\n\nexport const Image: React.FunctionComponent<ImageProps> = ({\n  alt,\n  src,\n  assetsPath = \"\",\n  renderedFileName = \"\",\n}) => {\n  const getAssetName = (path: string): string => {\n    const fileNameRegex = /(.*?)\\/(.*?).(jpeg|jpg|gif|png|svg)$/;\n    const match = fileNameRegex.exec(path);\n\n    if (match && match[2]) {\n      const splitedName = match[2].split(\"/\");\n      return `${splitedName[splitedName.length - 1]}.${match[3]}`;\n    }\n    return \"\";\n  };\n\n  if (!assetsPath) return null;\n\n  const assetName = getAssetName(src);\n  if (!assetName) return null;\n\n  return <StyledImage src={`${assetsPath}${assetName}`} alt={alt} />;\n};\n","import React from \"react\";\n\ninterface ImageReferenceProps {}\n\nexport const ImageReference: React.FunctionComponent<\n  ImageReferenceProps\n> = () => {\n  return null;\n};\n","import { Url } from \"url\";\n\nimport {\n  getVideoService,\n  videoIdProcessors,\n} from \"gatsby-remark-embed-video/src/config\";\nimport {\n  IEmbedVideoOptions,\n  IVideoId,\n  IVideoService,\n} from \"gatsby-remark-embed-video/src/interfaces\";\n\nexport function embedVideoHTML(\n  type: string,\n  id: string,\n  options: IEmbedVideoOptions,\n): string {\n  try {\n    const videoId: IVideoId = readVideoId(type, id);\n\n    const videoService = getVideoService(videoId.service);\n    const url = createUrl(videoId.id, videoService, options);\n    let iframe = createIframe(url, videoService, options);\n    return iframe;\n  } catch (e) {\n    return `<p style=\"color: red\">Error: ${e.message}</p>`;\n  }\n}\n\nfunction readVideoId(type: string, id: string): IVideoId {\n  let videoId;\n  for (let processor of videoIdProcessors) {\n    try {\n      videoId = processor(id);\n    } catch (e) {\n      videoId = {};\n    }\n\n    if (Object.keys(videoId).length !== 0) {\n      return videoId as IVideoId;\n    }\n  }\n\n  if (type === \"video\") {\n    throw new TypeError(\"Id could not be processed\");\n  }\n\n  return {\n    id: id,\n    service: type.toLowerCase(),\n  };\n}\n\nfunction createUrl(\n  videoId: string,\n  videoService: IVideoService,\n  options: IEmbedVideoOptions,\n): string {\n  const videoUrl = videoService.embedUrl(videoId);\n  let url = new URL(videoUrl);\n\n  if (videoService.urlProcessing) {\n    url = videoService.urlProcessing(videoId, url, options);\n  }\n\n  return url.toString();\n}\n\nfunction createIframe(\n  url: string,\n  videoService: IVideoService,\n  options: IEmbedVideoOptions,\n) {\n  let iframeNode = `\n        <div class=\"embedVideo-container\">\n            <iframe \n              width=\"${options.width}\" \n              height=\"${options.height}\" \n              src=\"${url}\"\n              class=\"embedVideo-iframe\" \n              allowfullscreen\n            ></iframe>\n        </div>`;\n  if (options.noIframeBorder) {\n    iframeNode += `\n      <style>\n        .embedVideo-iframe {\n          border: 0\n        }\n      </style>`;\n  }\n\n  if (videoService.additionalHTML) {\n    iframeNode += videoService.additionalHTML;\n  }\n\n  return iframeNode;\n}\n","import { IEmbedVideoOptions } from \"gatsby-remark-embed-video/src/interfaces\";\nimport {\n  defaultOptions,\n  knownPlatforms,\n} from \"gatsby-remark-embed-video/src/config\";\n\nimport { embedVideoHTML } from \"./helpers\";\n\nconst overrideDefaultOptions = (\n  options?: IEmbedVideoOptions,\n): IEmbedVideoOptions => {\n  const videoOptions = options\n    ? { ...defaultOptions, ...options }\n    : { ...defaultOptions };\n\n  if (!videoOptions.height) {\n    videoOptions.height = Math.round(videoOptions.width / videoOptions.ratio);\n  }\n\n  return videoOptions;\n};\n\nexport default (value: string) => {\n  const options = overrideDefaultOptions({\n    width: 850,\n    ratio: 1.77,\n    related: false,\n    noIframeBorder: true,\n  });\n\n  const keywords = [...knownPlatforms(), \"video\"].join(\"|\");\n  const re = new RegExp(`\\(${keywords}\\):\\(\\.\\*\\)`, \"i\");\n\n  const processValue = value.match(re);\n  if (processValue) {\n    const type = processValue[1];\n    const id = processValue[2].trim();\n\n    const video = embedVideoHTML(type, id, options);\n\n    if (video.includes(\"Error\")) return null;\n    return video;\n  }\n  return null;\n};\n","import React from \"react\";\nimport styled from \"@styled\";\n\nimport embedVideo from \"./EmbedVideo\";\n\nconst StyledInlineCode = styled.code`\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier,\n    monospace;\n  font-size: 85%;\n  background-color: rgba(27, 31, 35, 0.05);\n  padding: 0.2em 0.4em;\n  margin: 0;\n  border-radius: 3px;\n`;\n\ninterface InlineCodeProps {\n  inline: boolean;\n  value: string;\n}\n\nexport const InlineCode: React.FunctionComponent<InlineCodeProps> = ({\n  inline = true,\n  value,\n  children,\n}) => {\n  let video = null;\n  if (value) video = embedVideo(value);\n\n  return video ? (\n    <div dangerouslySetInnerHTML={{ __html: video }} />\n  ) : (\n    <StyledInlineCode>{children === value ? value : children}</StyledInlineCode>\n  );\n};\n","import React from \"react\";\n\nimport L from \"@components/shared/Link\";\n\ninterface LinkProps {\n  href: string;\n  assetsPath?: string;\n}\n\nexport const Link: React.FunctionComponent<LinkProps> = ({\n  href,\n  assetsPath = \"\",\n  children,\n}) => {\n  const getAssetName = (path: string): string => {\n    const fileNameRegex = /(.*?)\\/(.*?).(jpeg|jpg|gif|png|svg|json|yaml|yml)$/;\n    const match = fileNameRegex.exec(path);\n\n    if (match && match[2]) {\n      const splitedName = match[2].split(\"/\");\n      return `${splitedName[splitedName.length - 1]}.${match[3]}`;\n    }\n    return \"\";\n  };\n\n  if (href.startsWith(\"http\")) {\n    return (\n      <L.External to={href} externalIcon underline>\n        {children}\n      </L.External>\n    );\n  }\n  if (href.startsWith(\"#\")) {\n    return (\n      <L.Hash to={href} underline>\n        {children}\n      </L.Hash>\n    );\n  }\n\n  const assetName = getAssetName(href);\n  if (assetName) {\n    return <a href={`${assetsPath}${assetName}`}>{children}</a>;\n  }\n  return (\n    <L.Internal to={href} underline>\n      {children}\n    </L.Internal>\n  );\n};\n","import React from \"react\";\n\ninterface LinkReferenceProps {}\n\nexport const LinkReference: React.FunctionComponent<\n  LinkReferenceProps\n> = () => {\n  return null;\n};\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledOl = styled.ol`\n  list-style-type: decimal;\n  margin-left: 28px;\n`;\n\nconst StyledUl = styled.ul`\n  list-style-type: disc;\n  margin-left: 20px;\n`;\n\ninterface ListProps {\n  start: number;\n  ordered: boolean;\n  tight: boolean;\n  depth: number;\n}\n\nexport const List: React.FunctionComponent<ListProps> = ({\n  start,\n  ordered,\n  tight,\n  depth,\n  children,\n}) => {\n  if (ordered) {\n    return <StyledOl start={start}>{children}</StyledOl>;\n  }\n  return <StyledUl>{children}</StyledUl>;\n};\n","import React from \"react\";\n\ninterface ListItemProps {\n  checked: boolean | null;\n  tight: boolean;\n  ordered: boolean;\n  index: number;\n}\n\nexport const ListItem: React.FunctionComponent<ListItemProps> = ({\n  checked,\n  tight,\n  ordered,\n  index,\n  children,\n}) => {\n  return <li key={index}>{children}</li>;\n};\n","import React from \"react\";\n\nimport P from \"@components/shared/Paragraph\";\n\ninterface ParagraphProps {}\n\nexport const Paragraph: React.FunctionComponent<ParagraphProps> = ({\n  children,\n}) => {\n  return <P>{children}</P>;\n};\n","import React from \"react\";\n\ninterface ParsedHTMLProps {\n  element: any;\n}\n\nexport const ParsedHTML: React.FunctionComponent<ParsedHTMLProps> = ({\n  element,\n}) => {\n  return <>{element}</>;\n};\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledRoot = styled.div`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial,\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n`;\n\nexport const Root: React.FunctionComponent = ({ children }) => {\n  return <StyledRoot>{children}</StyledRoot>;\n};\n","import React from \"react\";\nimport styled from \"@styled\";\n\nconst StyledStrong = styled.strong`\n  font-weight: ${props => props.theme.fontWeight.bold};\n`;\n\ninterface StrongProps {}\n\nexport const Strong: React.FunctionComponent<StrongProps> = ({ children }) => {\n  return <StyledStrong>{children}</StyledStrong>;\n};\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTable = styled.table`\n  display: block;\n  width: 100%;\n  overflow: auto;\n`;\n\ninterface TableProps {\n  columnAlignment: AlignType;\n}\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  columnAlignment,\n  children,\n}) => {\n  return <StyledTable>{children}</StyledTable>;\n};\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTableBody = styled.tbody``;\n\ninterface TableBodyProps {\n  columnAlignment: AlignType;\n}\n\nexport const TableBody: React.FunctionComponent<TableBodyProps> = ({\n  columnAlignment,\n  children,\n}) => {\n  return <StyledTableBody>{children}</StyledTableBody>;\n};\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\ninterface TableCellProps {\n  align: AlignType;\n}\n\nconst StyledTableHeaderCell = styled(\"th\")<TableCellProps>`\n  text-align: ${props => props.align};\n  padding: 8px 13px;\n  display: table-cell;\n  vertical-align: middle;\n  border: 1px solid rgb(223, 226, 229);\n\n  &:first-child {\n    padding-left: 13px;\n  }\n\n  &:last-child {\n    padding-right: 13px;\n  }\n`;\n\nconst StyledTableCell = styled(\"td\")<TableCellProps>`\n  text-align: ${props => props.align};\n  padding: 8px 13px;\n  display: table-cell;\n  vertical-align: middle;\n  border: 1px solid rgb(223, 226, 229);\n\n  &:first-child {\n    padding-left: 13px;\n  }\n\n  &:last-child {\n    padding-right: 13px;\n  }\n`;\n\ninterface TableCellProps {\n  isHeader: boolean;\n  align: AlignType;\n}\n\nexport const TableCell: React.FunctionComponent<TableCellProps> = ({\n  isHeader = false,\n  align = \"left\",\n  children,\n}) => {\n  return isHeader ? (\n    <StyledTableHeaderCell align={align}>{children}</StyledTableHeaderCell>\n  ) : (\n    <StyledTableCell align={align}>{children}</StyledTableCell>\n  );\n};\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTableHead = styled.thead``;\n\ninterface TableHeadProps {\n  columnAlignment: AlignType;\n}\n\nexport const TableHead: React.FunctionComponent<TableHeadProps> = ({\n  columnAlignment,\n  children,\n}) => {\n  return <StyledTableHead>{children}</StyledTableHead>;\n};\n","import React from \"react\";\nimport { AlignType } from \"react-markdown\";\n\nimport styled from \"@styled\";\n\nconst StyledTableRow = styled.tr`\n  &:nth-child(2n) {\n    background-color: rgb(246, 248, 250);\n  }\n`;\n\ninterface TableRowProps {\n  isHeader: boolean;\n  columnAlignment: AlignType;\n}\n\nexport const TableRow: React.FunctionComponent<TableRowProps> = ({\n  isHeader = false,\n  columnAlignment,\n  children,\n}) => {\n  return <StyledTableRow>{children}</StyledTableRow>;\n};\n","import React from \"react\";\n\ninterface TextProps {}\n\nexport const Text: React.FunctionComponent<TextProps> = ({ children }) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\ninterface ThematicBreakProps {}\n\nexport const ThematicBreak: React.FunctionComponent<ThematicBreakProps> = ({\n  children,\n}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\ninterface VirtualHTMLProps {}\n\nexport const VirtualHTML: React.FunctionComponent<VirtualHTMLProps> = () => {\n  return null;\n};\n","import React, { ReactType } from \"react\";\nimport RM, { ReactMarkdownProps, NodeType } from \"react-markdown\";\n\nimport parseHtml from \"./parseHTML\";\n\nimport * as Components from \"./components\";\n\ntype Renderers = { [key in NodeType | \"parsedHtml\"]: ReactType };\n\ninterface ReactMarkdownAdditionalProps {\n  headingPrefix?: string;\n  assetsPath?: string;\n  renderedFileName?: string;\n}\n\nconst ReactMarkdown: React.FunctionComponent<\n  ReactMarkdownProps & ReactMarkdownAdditionalProps\n> = ({\n  source,\n  escapeHtml = false,\n  headingPrefix = \"\",\n  assetsPath = \"\",\n  renderedFileName = \"\",\n}) => {\n  const renderers: Renderers = {\n    root: Components.Root,\n    text: Components.Text,\n    break: Components.Break,\n    paragraph: Components.Paragraph,\n    emphasis: Components.Emphasis,\n    strong: Components.Strong,\n    thematicBreak: Components.ThematicBreak,\n    blockquote: Components.BlockQuote,\n    delete: Components.Delete,\n    link: (props: any) => (\n      <Components.Link {...props} assetsPath={assetsPath} />\n    ),\n    image: (props: any) => (\n      <Components.Image\n        {...props}\n        assetsPath={assetsPath}\n        renderedFileName={renderedFileName}\n      />\n    ),\n    linkReference: Components.LinkReference,\n    imageReference: Components.ImageReference,\n    table: Components.Table,\n    tableHead: Components.TableHead,\n    tableBody: Components.TableBody,\n    tableRow: Components.TableRow,\n    tableCell: Components.TableCell,\n    list: Components.List,\n    listItem: Components.ListItem,\n    definition: Components.Definition,\n    heading: (props: any) => (\n      <Components.Heading {...props} headingPrefix={headingPrefix} />\n    ),\n    inlineCode: Components.InlineCode,\n    code: Components.Code,\n    html: Components.HTML,\n    virtualHtml: Components.VirtualHTML,\n    parsedHtml: Components.ParsedHTML,\n  };\n\n  return (\n    <RM\n      source={source}\n      escapeHtml={escapeHtml}\n      renderers={renderers}\n      astPlugins={[parseHtml]}\n    />\n  );\n};\n\nexport default ReactMarkdown;\n","import React from \"react\";\n\nimport Link from \"@components/shared/Link\";\nimport H from \"@components/shared/H\";\n\nimport { FormattedMessage, getTranslation } from \"@common/i18n\";\n\nimport { PostMetaDataAuthor } from \"./types\";\n\nimport { PostHeaderWrapper, PostMetadata } from \"./styled\";\n\ninterface PostHeaderProps {\n  title: string;\n  author: PostMetaDataAuthor;\n  date: string;\n  path: string;\n}\n\nconst gt = getTranslation(\"blog\");\n\nconst PostHeader: React.FunctionComponent<PostHeaderProps> = ({\n  title,\n  author: { name },\n  date,\n  path,\n}) => {\n  const metadata = (\n    <FormattedMessage\n      id={gt(\"postMetadata\")}\n      values={{\n        author: name,\n        date: date,\n      }}\n    />\n  );\n\n  return (\n    <PostHeaderWrapper>\n      <Link.Internal to={path}>\n        <H as=\"h2\">{title}</H>\n      </Link.Internal>\n      <PostMetadata>{metadata}</PostMetadata>\n    </PostHeaderWrapper>\n  );\n};\n\nexport default PostHeader;\n","import React from \"react\";\n\nimport ReactMarkdown from \"@components/shared/ReactMarkdown\";\n\ninterface DefaultTemplatePostProps {\n  markdown: string;\n  assetsPath: string;\n}\n\nconst DefaultTemplatePost: React.FunctionComponent<\n  DefaultTemplatePostProps\n> = ({ markdown, assetsPath }) => {\n  return (\n    <ReactMarkdown\n      source={markdown}\n      escapeHtml={false}\n      assetsPath={assetsPath}\n    />\n  );\n};\n\nexport default DefaultTemplatePost;\n","import styled from \"@styled\";\n\n/* Release Template */\nexport const ReleaseButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 50px;\n`;\n","import React from \"react\";\n\nimport { FormattedMessage } from \"@common/i18n\";\n\nimport ReactMarkdown from \"@components/shared/ReactMarkdown\";\nimport Button from \"@components/shared/Button\";\nimport Link from \"@components/shared/Link\";\n\nimport config from \"@config\";\n\nimport { ReleaseButtonsWrapper } from \"../styled\";\n\ninterface ReleaseTemplatePostProps {\n  markdown: string;\n  assetsPath: string;\n  releaseTag?: string;\n}\n\nconst ReleaseTemplatePost: React.FunctionComponent<\n  ReleaseTemplatePostProps\n> = ({ markdown, assetsPath, releaseTag }) => (\n  <>\n    {releaseTag && (\n      <ReleaseButtonsWrapper>\n        <Link.External\n          to={`${config.links.KYMA_REPOSITORY_LINK}/releases/${releaseTag}`}\n        >\n          <Button.Normal iconName=\"cloud-download-alt\" iconPrefix=\"fas\">\n            <FormattedMessage\n              id=\"blog.downloadButton\"\n              values={{\n                version: releaseTag,\n              }}\n            />\n          </Button.Normal>\n        </Link.External>\n      </ReleaseButtonsWrapper>\n    )}\n    <ReactMarkdown\n      source={markdown}\n      escapeHtml={false}\n      assetsPath={assetsPath}\n    />\n  </>\n);\n\nexport default ReleaseTemplatePost;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport DefaultTemplate from \"@components/blog/content/templates/Default\";\nimport ReleaseTemplate from \"@components/blog/content/templates/Release\";\n\nimport {\n  PostType,\n  PostMetaData,\n  PostTypeRelease,\n  PostTypeEvent,\n} from \"@components/blog/types\";\n\ninterface PostContentProps {\n  markdown: string;\n  assetsPath?: string;\n  metadata: PostMetaData;\n}\n\nconst PostContent: React.FunctionComponent<PostContentProps> = ({\n  markdown,\n  assetsPath = \"\",\n  metadata,\n}) => {\n  if (metadata.type) {\n    if (metadata.type === PostTypeRelease)\n      return (\n        <ReleaseTemplate\n          markdown={markdown}\n          releaseTag={metadata.releaseTag}\n          assetsPath={assetsPath}\n        />\n      );\n  }\n\n  return <DefaultTemplate markdown={markdown} assetsPath={assetsPath} />;\n};\n\nexport default PostContent;\n","import { PageContext } from \"@common/types\";\n\n/* Post */\nexport interface Post {\n  id: string;\n  excerpt?: string;\n  rawMarkdownBody: string;\n  fields: PostFields;\n  frontmatter: PostMetaData;\n}\n\n/* Post Page Context */\nexport interface PostPageContext {\n  previous?: Post;\n  next?: Post;\n  assetsPath?: string;\n}\n\n/* Post fields */\nexport interface PostFields {\n  slug: string;\n  date: string;\n}\n\n/* Post Metadata */\nexport interface PostMetaData extends PostTypeMetadata {\n  title: string;\n  author: PostMetaDataAuthor;\n  tags?: string[];\n}\n\nexport interface PostMetaDataAuthor {\n  name: string;\n  socialMedia?: {\n    github?: string;\n    twitter?: string;\n  };\n}\n\n/* Post types */\nexport type PostType = \"release\" | \"event\";\nexport const PostTypeRelease = \"release\";\nexport const PostTypeEvent = \"event\";\n\nexport interface PostTypeMetadata {\n  type?: PostType;\n  releaseTag?: string;\n}\n","import React from \"react\";\n\nimport Icon from \"@components/shared/Icon\";\n\nimport { FormattedMessage, getTranslation } from \"@common/i18n\";\n\nimport { PostFooterWrapper, PostTagsWrapper, PostTag } from \"./styled\";\n\ninterface PostFooterProps {\n  tags: string[];\n}\n\nconst gt = getTranslation(\"blog\");\n\nconst PostFooter: React.FunctionComponent<PostFooterProps> = ({\n  tags = [],\n}) => {\n  return (\n    <PostFooterWrapper>\n      <PostTagsWrapper>\n        <FormattedMessage id={gt(\"tags\")}>\n          {tags => (\n            <PostTag>\n              <Icon iconName=\"tags\" iconPrefix=\"fas\" />\n              {tags}:\n            </PostTag>\n          )}\n        </FormattedMessage>\n        {tags.map((tag: string) => (\n          <PostTag key={tag}>#{tag}</PostTag>\n        ))}\n      </PostTagsWrapper>\n    </PostFooterWrapper>\n  );\n};\n\nexport default PostFooter;\n","import React from \"react\";\n\nimport { FormattedMessage } from \"@common/i18n\";\n\nimport Link from \"@components/shared/Link\";\nimport Button from \"@components/shared/Button\";\n\nimport PostHeader from \"@components/blog/PostHeader\";\nimport PostContent from \"@components/blog/content/PostContent\";\nimport PostFooter from \"@components/blog/PostFooter\";\nimport PrevNextSection from \"@components/blog/PrevNextSection\";\n\nimport { PostPageContext, PostMetaData, PostFields } from \"./types\";\n\nimport { PostWrapper, PostContentWrapper } from \"./styled\";\n\ninterface PostProps extends PostPageContext {\n  metadata: PostMetaData;\n  fields: PostFields;\n  markdown: string;\n  readMore?: boolean;\n}\n\nconst Post: React.FunctionComponent<PostProps> = ({\n  metadata: { title, author, tags = [] },\n  metadata,\n  fields: { slug, date },\n  markdown,\n  assetsPath = \"\",\n  previous,\n  next,\n  readMore = false,\n}) => {\n  return (\n    <PostWrapper>\n      <PostHeader title={title} author={author} date={date} path={slug} />\n      <PostContentWrapper>\n        <PostContent\n          markdown={markdown}\n          metadata={metadata}\n          assetsPath={assetsPath}\n        />\n      </PostContentWrapper>\n      {readMore && (\n        <Link.Internal to={slug}>\n          <Button.Emphasized size=\"sm\">\n            <FormattedMessage id=\"blog.readMoreButton\" />\n          </Button.Emphasized>\n        </Link.Internal>\n      )}\n      <PostFooter tags={tags} />\n      {/* {!readMore && (\n        <PrevNextSection next={next} previous={previous} />\n      )} */}\n    </PostWrapper>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\n\nimport Grid from \"@styled/Grid\";\n\nimport Separator from \"@components/shared/Separator\";\n\nimport PostPage from \"@components/blog/Post\";\n\nimport { AllMarkdownRemarkNode } from \"@types\";\nimport { Post } from \"./types\";\n\nimport { BlogPageWrapper as Wrapper } from \"./styled\";\n\ntype AllMarkdownRemarkNodePost = AllMarkdownRemarkNode<Post>;\n\ninterface BlogPageProps {\n  nodes: AllMarkdownRemarkNodePost[];\n}\n\nexport const BlogPageWrapper: React.FunctionComponent = ({ children }) => {\n  return (\n    <Grid.Container>\n      <Grid.Row>\n        <Grid.Unit df={1} md={0} />\n        <Grid.Unit df={10} md={12}>\n          <Wrapper>{children}</Wrapper>\n        </Grid.Unit>\n        <Grid.Unit df={1} md={0} />\n      </Grid.Row>\n    </Grid.Container>\n  );\n};\n\nconst BlogPage: React.FunctionComponent<BlogPageProps> = ({ nodes }) => {\n  return (\n    <BlogPageWrapper>\n      {nodes.map((edge: AllMarkdownRemarkNodePost, index: number) => {\n        const post = edge.node;\n        return (\n          <PostPage\n            key={post.id}\n            metadata={post.frontmatter}\n            fields={post.fields}\n            markdown={post.excerpt || post.rawMarkdownBody}\n            readMore\n          />\n        );\n      })}\n    </BlogPageWrapper>\n  );\n};\n\nexport default BlogPage;\n"],"sourceRoot":""}